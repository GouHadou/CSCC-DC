//#library "Copywep"
//#include "zcommon.acs"
//#include "CSCCLIB.acs"

#DEFINE MAX_FAKEWEPS 97

str FakeWeaponInfo[MAX_FAKEWEPS][5] = {
//Actor, GizmoDisplay, GizmoWep, GizmoItem, CorpDisplay, CorpWep, CorpItem
{"SuperArmWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"HyperBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"IceSlasherWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"ThunderBeamWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"FireStormWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"RollingCutterWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"TimeSlowWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"OilSliderWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE

{"BubbleLeadWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"MetalBladeWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"AtomicFireWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"LeafShieldWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"AirShooterWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"QuickBoomerangWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"CrashBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"TimeStopperWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL 

{"MagnetMissileWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"TopSpinWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"NeedleCannonWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"ShadowBladeWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"GeminiLaserWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"SearchSnakeWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"HardKnuckleWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"SparkShockWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED

{"DrillBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"RingBoomerangWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"DustCrusherWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"PharaohShotWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"SkullBarrierWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"DiveMissileWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"RainFlushWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"FlashStopperWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL

{"NapalmBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"ChargeKickWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"GyroAttackWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED       
{"PowerStoneWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"WaterWaveWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"CrystalEyeWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"StarCrashWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"GravityHoldWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL

{"BlizzardAttackWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"FlameBlastWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"YamatoSpearWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"PlantBarrierWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"SilverTomahawkWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"WindStormWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"KnightCrushWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"CentaurFlashWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL

{"FreezeCrackerWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"NoiseCrushWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"WildCoilWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"DangerWrapWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"ScorchWheelWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"JunkShieldWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"SlashClawWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"ThunderBoltWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED

{"AstroCrushWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"FlameSwordWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"ThunderClawWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"HomingSniperWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"WaterBalloonWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"MegaBallWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"FlashBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"IceWaveWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"TornadoHoldWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE

{"TenguBladeWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"WaveBurnerWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"SpreadDrillWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"MagicCardWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"RemoteMineWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"CopyVisionWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"IceWallWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"LightningBoltWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL

{"PlugBallWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"LaserTridentWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"BlackHoleBombWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"JewelSatelliteWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"ConcreteShotWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"TornadoBlowWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"HornetChaserWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"MagmaBazookaWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
 
{"SolarBlazeWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL

/*
{"WheelCutterWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"ReboundStrikerWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"ThunderWoolWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"CommandoBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"ChillSpikeWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"WaterShieldWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD
{"TripleBladeWepCS", "CSCC_GizmoFrost", "FrostCannonWep",, "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE

{"GrabBusterWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"BubbleBombWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"PhotonMissileWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"SaltWaterWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"ElectricShockWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"BlackHoleWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"DeepDiggerWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"BreakDashWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"SparkChaserWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
*/

{"SakugarneWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"BalladeCrackerWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"ScrewCrusherWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"MirrorBusterWepCS", "CSCC_GizmoHydro", "HydroCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SHIELD

{"IceBladeWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"LightningWaveWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"GouhadouWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"NadeSpamWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"CometWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"FusionBombWepCS", "CSCC_GizmoStone", "StoneCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //POWER
{"MeteorWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpFragGrenade", "CorpFragGrenade"}, //SPECIAL
{"RailBusterWepCS", "CSCC_GizmoLightning", "LightningCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RANGED
{"PistonTremorWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
{"IdolWaveWepCS", "CSCC_GizmoFlame", "FlameCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //RAPID
{"SteelPunchWepCS", "CSCC_GizmoFrost", "FrostCannonWep", "CSCC_CorpGrandDad", "CorpGrandDad"}, //CLOSE
};

#DEFINE MAX_FAKEMESSAGES 7

str FakeWeaponMessage[MAX_FAKEMESSAGES][2] = {
{"FlameCannonWep", "\cgPower Up! Flame Cannon!"},
{"FrostCannonWep", "\cgPower Up! Frost Cannon!"},
{"StoneCannonWep", "\cgPower Up! Stone Cannon!"},
{"LightningCannonWep", "\cgPower Up! Lightning Cannon!"},
{"HydroCannonWep", "\cgPower Up! Hydro Cannon!"},
{"CorpFragGrenade", "\cgYou got the Fragmentation Grenade!"},
{"CorpGrandDad", "\cgYou got the Grand Dad!"},
};

script "CSACS_WeaponDisplay" (void) CLIENTSIDE
{
str CSCCWeaponName = "";
int StateSet = 0;

if(CheckActorClass(consolePlayerNumber()+1000,"MegamanC") || CheckActorClass(consolePlayerNumber()+1000,"CopyRobot")){WeaponPickupStateSet(consolePlayerNumber()+1000,0,GetActorClass(0),0); terminate;}
if(CheckActorClass(consolePlayerNumber()+1000,"GizmoClass")){StateSet = 1;} 
if(CheckActorClass(consolePlayerNumber()+1000,"LaggyBlazkoClass")){StateSet = 3;}
if(StateSet!=0)
{
for(int i = 0; i < MAX_FAKEWEPS; i++) 
    {
    if(StrIcmp(FakeWeaponInfo[i][0], GetActorClass(0))==0) 
        {
        if(StrIcmp(FakeWeaponInfo[i][StateSet], "")!=0)
            {
            WeaponPickupStateSet(consolePlayerNumber()+1000,FakeWeaponInfo[i][StateSet],FakeWeaponInfo[i][StateSet+1],StateSet);
            /*str WeaponToGivePowerup = StrParam(s:FakeWeaponInfo[i][StateSet+1],s:"DelayPickup");
            str NopeState = StrParam(s:FakeWeaponInfo[i][StateSet],s:"Translucent");
            if(CheckActorInventory(consolePlayerNumber()+1000,WeaponToGivePowerup)){SetActorState(0,NopeState);}
            else{SetActorState(0,FakeWeaponInfo[i][StateSet]);}*/
            terminate;
            }
        }
    }
}
SetActorState(0,"CSCC_TranslucentSpawn");
terminate;
}

function void WeaponPickupStateSet (int pickupTID, str WeaponSet, str WeaponType, int StateSet)
{
str NopeState = StrParam(s:WeaponSet,s:"Translucent");

//Normal Handler
if(StateSet == 0)
{
if(!CheckActorInventory(pickupTID,WeaponType)||CheckInventory("CSCC_ChangeFlagDropped")){SetActorState(0,"CSCC_DefaultSpawn");}
else{SetActorState(0,"CSCC_TranslucentSpawn");} 
}

//Gizmo Handler
if(StateSet == 1)
{
if(!CheckActorInventory(pickupTID,WeaponType)||CheckInventory("CSCC_ChangeFlagDropped")){SetActorState(0,WeaponSet);}
else{SetActorState(0,NopeState);}
}

//Corporal Handler
if(StateSet == 3)
{
str WeaponToGivePowerup = StrParam(s:WeaponType,s:"DelayPickup");
if(!CheckActorInventory(pickupTID,WeaponType) && !CheckActorInventory(pickupTID,WeaponToGivePowerup)){SetActorState(0,WeaponSet);}
else if(CheckInventory("CSCC_ChangeFlagDropped")){SetActorState(0,WeaponSet);}
else{SetActorState(0,NopeState);}
}

}

function bool OpaqueCheck (void)
{
return (CheckInventory("CSCC_ChangeFlagDropped"));
}

script "CSACS_FakeWeaponPickup" (void)
{
ServerMAX = GetMaxPlayers();
int WeaponStatus = 0;
str WeaponToGive = "";
if(CheckFlag(0,"DROPPED")){GiveInventory("CSCC_ChangeFlagDropped",1);}
while(CheckFlag(0,"SPECIAL"))
    {
    for(int p = 0; p < ServerMAX; p++)
        {
        if(xyDistance(0, p+1000)<47 && zDistance(0, p+1000)<12)
            {
            if(!CheckActorInventory(p+1000,"IsDead") && PlayerInGame(p) && GetActorProperty(p+1000,APROP_Health)>0)
                {
                if(ValidForWeapon(p+1000)>0)
                    {
                    for(int i = 0; i < MAX_FAKEWEPS; i++) 
                        {
                        if(StrIcmp(FakeWeaponInfo[i][0], GetActorClass(0))==0) 
                            {
                            WeaponToGive = FakeWeaponInfo[i][ValidForWeapon(p+1000)];
                            }
                        }
                    AttemptToGiveWeapon(p+1000,WeaponToGive);
                    }
                }
            }
        }
    Delay(1);
    }
}

function int ValidForWeapon (int tid)
{
	int r = 0;
	if(CheckActorClass(tid,"GizmoClass")){r = 2;}
	if(CheckActorClass(tid,"LaggyBlazkoClass")){r = 4;}
	return r;
}

function void AttemptToGiveWeapon (int tid, str WeaponToGive)
{
//Gizmo Handler
if(ValidForWeapon(tid)==2)
    {
    if(CheckFlag(0,"DROPPED") || !CheckActorInventory(tid,WeaponToGive))
        {
        ACS_NamedExecuteAlways("CSACS_CustomPickupMessage",0,tid,WeaponToGive);
        ACS_NamedExecuteAlways("CSACS_CustomPickupSound",0,tid);
        GiveActorInventory(tid,WeaponToGive,1); 
        ToStayOrNotToStay();
        }
    }

//Corporal Handler
if(ValidForWeapon(tid)==4)
    {
    str WeaponToGivePowerup = StrParam(s:WeaponToGive,s:"DelayPickup");
    if(CheckFlag(0,"DROPPED"))
        {
        ACS_NamedExecuteAlways("CSACS_CustomPickupMessage",0,tid,WeaponToGive);
        ACS_NamedExecuteAlways("CSACS_CustomPickupSound",0,tid,1);
        GiveActorInventory(tid,WeaponToGivePowerup,1); 
        GiveActorInventory(tid,WeaponToGive,1); 
        ToStayOrNotToStay();
        }
    else if(!CheckActorInventory(tid,WeaponToGivePowerup) && !CheckActorInventory(tid,WeaponToGive))
        {
        ACS_NamedExecuteAlways("CSACS_CustomPickupMessage",0,tid,WeaponToGive);
        ACS_NamedExecuteAlways("CSACS_CustomPickupSound",0,tid,1);
        GiveActorInventory(tid,WeaponToGivePowerup,1); 
        GiveActorInventory(tid,WeaponToGive,1); 
        ToStayOrNotToStay();
        }
    }
}

function void ToStayOrNotToStay (void)
{
if(CheckFlag(0,"DROPPED")||!GetCvar("SV_WeaponStay")){GiveInventory("CSCC_CustomPickupFunc",1);}
}

Script "CSACS_CustomPickupSound" (int pickupTID, int Type)
{
SetActivator(pickupTID);
if(Type==0){LocalAmbientSound("weapon/weaponup",127);}
if(Type==1){SetMugshotState("Grin"); LocalAmbientSound("weapon/tommyload",127);}
}

Script "CSACS_CustomPickupMessage" (int pickupTID, int pickupType) CLIENTSIDE
{
str PickupString;
for(int i = 0; i < MAX_FAKEMESSAGES; i++) 
    {
    if(StrIcmp(FakeWeaponMessage[i][0], pickupType)==0) 
        {
        PickupString = FakeWeaponMessage[i][1];
        }
    }
if(pickupTID==CheckPlayerCamera(ConsolePlayerNumber()))Log(s:PickupString);
}

Script "CSACS_CustomPickupChange" (void)
{
SetActorState(0,"CSCC_CustomPickup");
}