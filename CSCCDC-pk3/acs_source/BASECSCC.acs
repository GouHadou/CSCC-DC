#library "BASECSCC"
#import "WEPACS.acs"

#include "zcommon.acs"
#include "8BDMLIB.ACS"
#include "CSCCLIB.acs"
#include "CLASSACS.acs"
#include "COPY.ACS"
#include "UNIX.ACS"
#include "COPYWEP.ACS"


Script "CSACS_TeamSpecies" ENTER 
{
int pln = PlayerNumber();
if(IsTeamGame == 1)
	{
	switch(GetPlayerInfo(PlayerNumber(), PLAYERINFO_TEAM))
		{
		Case 0:
		SetActorProperty(0,APROP_SPECIES,"LightMember");
		break;
		Case 1:
		SetActorProperty(0,APROP_SPECIES,"WilyMember");
		break;
		Case 2:
		SetActorProperty(0,APROP_SPECIES,"CossackMember");
		break;
		Case 3:
		SetActorProperty(0,APROP_SPECIES,"KingMember");
		break;
		}
	}
else{setactorproperty(0,APROP_SPECIES,StrParam(s:"Player_",i:pln));}
}

script "CSACS_TSRespawn" RESPAWN
{
ACS_NamedExecuteAlways("CSACS_TeamSpecies",0);
}

Script "CSACS_HealthSet" (void) CLIENTSIDE
{
int StateSet = 0;
If(CheckActorInventory(consolePlayerNumber()+1000,"CannotUseHealing")){SetActorState(0,"TranslucentSpawn"); StateSet=1;}
If(StateSet==0){SetActorState(0,"NormalSpawn");}
}

//Common ACS Scripts


script "HitKnockBack" (int force)
{
int pusher = ACS_NamedExecuteWithResult("GetTarget", AAPTR_TARGET);
int Vang = VectorAngle(GetActorX(0) - GetActorX(pusher), GetActorY(0) - GetActorY(pusher)) >> 8;
ThrustThing(Vang, force, 1, 0);
}

Script "GetTarget" (int Target)
{
SetActivator(0, Target);
int ReturnTID = ActivatorTID();
SetResultValue(ReturnTID);
}

script "PitchGrab" (Void)
{
int FiringPlayer= ACS_ExecuteWithResult(257, 0);
int Output = 360 * (GetActorPitch(FiringPlayer));
Setresultvalue(Output >> 16);
//--
}
//End Common Scripts