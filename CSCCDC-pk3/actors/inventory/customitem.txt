actor EnergyBalancerCS : BigWeaponEnergyCS replaces EnergyBalancer {}

actor ItemGiver : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
inventory.pickupmessage "Support Item! "
Inventory.PickupSound "item/1up"
scale 2.0
+COUNTITEM
-FLOATBOB
+INVBAR
States
{
Spawn:
"----" A 0
"----" A 0 A_JumpIf(TID == 995, "Spawn2")
"----" A 0 ACS_NamedExecuteAlways("CSCC_ItemSpriteSpawn", 0)
"----" A 0 Thing_ChangeTID(0,995)
Spawn2:
"----" A 35 
loop
CSCC_DefaultSpawn:
"----" A 0 A_SetTranslucent(1.0, 0)
"----" A 0 A_Jump(256, "Animation") 
goto Animation
CSCC_Gizmo:
CSCC_OtherSpawn:
"----" A 0 A_SetTranslucent(0.5, 0)
"----" A 0 A_Jump(256, "Animation") 
goto Animation
Animation:
"----" A 35 
loop
Pickup:
DUST B 0 
fail
Death:
"----" A 1 A_Fadeout
loop
}
}

actor ProtoGiver : ItemGiver replaces ProtoUpgrade
{
inventory.pickupmessage "Support Item! Proto Upgrade!"
States
{
Spawn:
WEA2 Q 0
Goto "Super::Spawn+1"
CSCC_DefaultSpawn:
"----" A 0 A_SetTranslucent(1.0, 0)
"----" A 0 A_Jump(256, "Animation") 
Goto Animation
CSCC_Gizmo:
"----" A 0 A_SetTranslucent(1.0, 0)
ETER N 35
wait
CSCC_OtherSpawn:
"----" A 0 A_SetTranslucent(0.5, 0)
"----" A 0 A_Jump(256, "Animation") 
goto Animation
Animation:
WEA2 Q 35
wait
Pickup:
"----" A 0 A_JumpIf(CallACS("CSCC_ItemToGive", 0), "Give")
fail
stop
Give:
"----" A 0 A_Railwait
stop
}
} 