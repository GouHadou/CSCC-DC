//#include class
actor UkiHud :  Once
{
}
actor UkiRemoteFlag :  Once
{
}
actor UkiPOVFlag :  Once
{
}

Actor UkiPOVCancel : Powerup
{
Powerup.Duration 5
}

Actor UkiDoubleUpgrade : Powerup
{
Powerup.Duration -15
}

actor UkiAttackFlag :  Once
{
}
actor SnipeFlag :  Once
{
}
actor RapidFlag :  Once
{
}
actor ShotgunFlag :  Once
{
}
actor GuidedFlag :  Once
{
}
actor VelocityFlag :  Once
{
}
actor ArcingFlag :  Once
{
}
actor BouncingFlag :  Once
{
}
actor NerfFlag :  Once
{
}
actor ExplodingFlag :  Once
{
}
actor UpgradeChoiceActive :  Once
{
}

actor UkiyamaClassWep : CSCCWepBase
{
Weapon.AmmoGive 28 
Weapon.AmmoUse 1
Weapon.SlotNumber 1  
Obituary "$OB_UKIMODIFY" 
Inventory.Pickupmessage "Snipe Up! Meteor!"
Tag "$TAG_UKIWEP"
weapon.ammotype "UkiAmmo" 
DropItem "MeteorWepCS"
States
{
Ready:
UKIQ B 0
UKIQ B 0 ACS_ExecuteAlways(998,0,DYE_UKIYAMA) 
UKIQ A 0 //A_GiveInventory("IsUki")
UKIQ A 0 A_JumpIfInventory("Once",1,"Ready2")
UKIQ A 0 A_GiveInventory("Once")
DOCR A 0 A_SpawnItemEX("UpgradeTimerGiver")
Ready2:
UKIQ B 5 A_WeaponReady(WRF_NOSWITCH)
UKIQ B 0 A_GiveInventory("UkiAmmo",1)
loop
Deselect: 
UKIQ B 0 //A_TakeInventory("IsUki",1)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
UKIQ B 1 A_Lower
Loop
Select: 
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
UKIQ B 1 A_Raise
Loop
Fire:
UKIQ B 0 A_JumpIfNoAmmo("NoAmmo")
UKIQ B 0 A_JumpIfInventory("IsBot", 1, "BotAI1")
UKIQ B 0 A_JumpIfInventory("UkiRemoteFlag", 1, "NoAmmo")
UKIQ B 0 A_JumpIfInventory("SnipeFlag",1,"SnipeSelected")
UKIQ B 0 A_JumpIfInventory("RapidFlag",1,"RapidSelected")
UKIQ B 0 A_JumpIfInventory("ShotgunFlag",1,"ShotgunSelected")
UKIQ B 0 A_GiveInventory("UkiShotMainFire",1)
UKIQ B 0 A_PlaySoundEx("weapon/UkiRevolverShot", "Weapon") 
goto EndNormal
SnipeSelected:
UKIY B 0 A_JumpIfInventory("UkiAmmo",3,1)
goto NoAmmo
UKIQ B 0 A_TakeInventory("UkiAmmo",3)
UKIQ B 0 A_PlaySoundEx("weapon/pshot","Weapon")
UKIQ B 0 A_GiveInventory("UkiSnipeShotMainFire",1)
goto EndSnipe
RapidSelected:
UKIQ B 0 A_PlaySoundEx("weapon/UkiRevolverShot", "Weapon") 
UKIQ B 0 A_GiveInventory("UkiRapidShotMainFire",1)
goto EndRapid
ShotgunSelected:
UKIQ B 0 A_JumpIfInventory("UkiAmmo",5,1)
goto NoAmmo
UKIQ B 0 A_TakeInventory("UkiAmmo",4)
UKIQ B 0 A_PlaySoundEx("weapon/magnetmissile", "Weapon") 
UKIQ B 0 A_GiveInventory("UkiShotgunShotMainFire",1)
goto EndShotgun
Altfire:
UKIQ B 0 A_JumpIfInventory("UkiPOVFlag",1,"NoAmmo")
UKIQ B 0 A_JumpIfInventory("UpgradeTimer",500,1)
goto NoAmmo
UKIQ B 0 A_TakeInventory("UpgradeTimer",500)
UKIQ B 0 A_TakeInventory("Upgrader1",1)
UKIQ B 0 A_TakeInventory("Upgrader2",1)
UKIQ B 0 A_TakeInventory("Upgrader3",1)
UKIQ B 0 A_TakeInventory("UpgradeRemover",1)
UKIQ B 0 A_SpawnItemEx("UkiVisionSpawner",0,8,32,Cos(pitch)*30, 0, -sin(pitch)*35,0,SXF_TRANSFERTRANSLATION) 
UKIQ DEFGHIJK 2
goto Ready+2
EndNormal:
UKIQ B 1 
UKIQ BC 2
UKIQ B 7
goto Ready+2 
EndSnipe:
UKIQ B 1 
UKIQ BC 2
UKIQ B 20
goto Ready+2  
EndShotgun:
UKIQ B 1 
UKIQ BC 2
UKIQ B 30
goto Ready+2  
EndRapid:
UKIQ B 1 
UKIQ BC 2
UKIQ B 1
goto Ready+2 
BotAI1:
UKIQ B 0 A_JumpIfInventory("UpgradeTimer", 500, "Bot1Check")
Goto Fire+2
Bot1Check:
UKIQ B 0 A_JumpIfInventory("SnipeFlag", 1, "Bot2Check")
UKIQ B 0 A_JumpIfInventory("RapidFlag", 1, "Bot2Check")
UKIQ B 0 A_JumpIfInventory("ShotgunFlag", 1, "Bot2Check")
UKIQ B 0 A_Jump(192, "BotSnipe", "BotShotGun", "BotRapid")
Goto BotAltCheck
BotSnipe:
UKIQ B 0 A_GiveInventory("BotSnipeUpgrade", 1)
Goto BotContinue
BotShotGun:
UKIQ B 0 A_GiveInventory("BotShotGunUpgrade", 1)
Goto BotContinue
BotRapid:
UKIQ B 0 A_GiveInventory("BotRapidUpgrade", 1)
Goto BotContinue
Bot2Check:
UKIQ B 0 A_JumpIfInventory("GuidedFlag", 1, "Bot3Check")
UKIQ B 0 A_JumpIfInventory("VelocityFlag", 1, "Bot3Check")
UKIQ B 0 A_JumpIfInventory("ArcingFlag", 1, "Bot3Check")
UKIQ B 0 A_Jump(192, "BotGuided", "BotVelocity", "BotArcing")
Goto BotAltCheck
BotGuided:
UKIQ B 0 A_GiveInventory("BotGuidedUpgrade", 1)
Goto BotContinue
BotVelocity:
UKIQ B 0 A_GiveInventory("BotVelocityUpgrade", 1)
Goto BotContinue
BotArcing:
UKIQ B 0 A_GiveInventory("BotArcingUpgrade", 1)
Goto BotContinue
Bot3Check:
UKIQ B 0 A_JumpIfInventory("BouncingFlag", 1, "BotAltCheck")
UKIQ B 0 A_JumpIfInventory("NerfFlag", 1, "BotAltCheck")
UKIQ B 0 A_JumpIfInventory("ExplodingFlag", 1, "BotAltCheck")
UKIQ B 0 A_Jump(192, "BotBouncing", "BotNerf", "BotExploding")
Goto BotAltCheck
BotBouncing:
UKIQ B 0 A_GiveInventory("BotBouncingUpgrade", 1)
Goto BotContinue
BotNerf:
UKIQ B 0 A_GiveInventory("BotNerfUpgrade", 1)
Goto BotContinue
BotExploding:
UKIQ B 0 A_GiveInventory("BotExplosiveUpgrade", 1)
Goto BotContinue
BotContinue:
UKIQ B 10 A_TakeInventory("UpgradeTimer", 500)
Goto Fire+2
BotAltCheck:
UKIQ B 0 A_JumpIfInventory("UkiPOVFlag", 1, 1)
Goto AltFire
UKIQ B 0 
Goto Fire+2
NoAmmo: 
UKIQ B 1 A_JumpIfInventory("IsBot", 1, 1)
Goto Ready+2 
UKIQ B 0 SetPlayerProperty(0, 1, 4)
UKIQ B 10 A_GiveInventory("UkiAmmo", 28)
UKIQ B 0 SetPlayerProperty(0, 0, 4)
Goto Ready+2 
}
}

actor UkiAmmo : Ammo 
{
+INVENTORY.IGNORESKILL
inventory.amount 1
inventory.maxamount 28 
}

actor UpgradeTimer : Ammo
{
+INVENTORY.IGNORESKILL
inventory.amount 1
inventory.maxamount 500 
}

actor IsUki : Inventory 
{
inventory.amount 1
inventory.maxamount 1
}

actor UpgradeTimerGiver 
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
+NoTargetSwitch
States
{
Spawn:
TNT1 A 1 
//TNT1 A 0 A_JumpIf(Args[0] >= 14, "GiveAmmo")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsUki",1,1)	
Goto Death
TNT1 A 0 A_SetArg(0, Args[0] + 1)
TNT1 A 0 A_JumpIfInTargetInventory("UpgradeChoiceActive",1,2)
TNT1 A 0 A_JumpIfInTargetInventory("UpgradeTimer",500,"GiveUpgradePack")	
TNT1 A 0 
TNT1 A 0 A_JumpIfInTargetInventory("UkiDoubleUpgrade",1,"Double")	
TNT1 A 0 A_GiveToTarget("UpgradeTimer",1)
Loop
GiveAmmo:
TNT1 A 0 A_GiveToTarget("UkiAmmo",1)
TNT1 A 0 A_SetArg(0, 0)
Goto Spawn+2
Double:
TNT1 A 0 A_GiveToTarget("UpgradeTimer",3)
Goto Spawn
GiveUpgradePack:
TNT1 A 0 A_JumpIfInTargetInventory("BouncingFlag",1,"UpgradeRemover")
TNT1 A 0 A_JumpIfInTargetInventory("NerfFlag",1,"UpgradeRemover")
TNT1 A 0 A_JumpIfInTargetInventory("ExplodingFlag",1,"UpgradeRemover")
TNT1 A 0 A_JumpIfInTargetInventory("GuidedFlag",1,"NextUpgradePack2")
TNT1 A 0 A_JumpIfInTargetInventory("VelocityFlag",1,"NextUpgradePack2")
TNT1 A 0 A_JumpIfInTargetInventory("ArcingFlag",1,"NextUpgradePack2")
TNT1 A 0 A_JumpIfInTargetInventory("SnipeFlag",1,"NextUpgradePack")
TNT1 A 0 A_JumpIfInTargetInventory("RapidFlag",1,"NextUpgradePack")
TNT1 A 0 A_JumpIfInTargetInventory("ShotgunFlag",1,"NextUpgradePack")
TNT1 A 0 A_GiveToTarget("Upgrader1")
goto Spawn
NextUpgradePack:
TNT1 A 0 A_GiveToTarget("Upgrader2")
goto Spawn
NextUpgradePack2:
TNT1 A 0 A_GiveToTarget("Upgrader3")
goto Spawn
UpgradeRemover:
TNT1 A 0 A_GiveToTarget("UpgradeRemover")
goto Spawn
Death:
TNT1 A 0
stop
}
}

actor UkiRemoteControl : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
+COUNTITEM
+INVBAR
inventory.icon "UKIRTE"
states
{
Use:
TNT1 A 0 A_GiveInventory("UkiRemoteFlag", 1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIREMOTE", 0)
TNT1 A 0 A_GiveInventory("UkiRemoteControlOff", 1)
stop
}
}

actor UkiRemoteControlOff : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
+COUNTITEM
+INVBAR
inventory.icon "UKIRTE2"
states
{
Use:
TNT1 A 0 A_TakeInventory("UkiRemoteFlag", 1)
TNT1 A 0 A_GiveInventory("UkiRemoteControl", 1)
stop
}
}

actor BaseUpgrade : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
inventory.icon "TNT1A0"
scale 2.0
+COUNTITEM
+INVBAR
states
{
Spawn:
TNT1 A 0
stop
Use:
TNT1 A 0
stop
NoChange:
TNT1 A 0
fail
}
}

actor UpgradeRemover : BaseUpgrade
{
inventory.icon "UKIREM"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_TakeInventory("SnipeFlag",1)
TNT1 A 0 A_TakeInventory("RapidFlag",1)
TNT1 A 0 A_TakeInventory("ShotgunFlag",1)
TNT1 A 0 A_TakeInventory("GuidedFlag",1)
TNT1 A 0 A_TakeInventory("VelocityFlag",1)
TNT1 A 0 A_TakeInventory("ArcingFlag",1)
TNT1 A 0 A_TakeInventory("BouncingFlag",1)
TNT1 A 0 A_TakeInventory("NerfFlag",1)
TNT1 A 0 A_TakeInventory("ExplodingFlag",1)
TNT1 A 0 A_GiveInventory("Upgrader1")
TNT1 A 0 A_GiveInventory("UkiDoubleUpgrade", 1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor Upgrader1 : BaseUpgrade
{
inventory.icon "UKIUPG"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("SnipeUpgrade",1)
TNT1 A 0 A_GiveInventory("RapidUpgrade",1)
TNT1 A 0 A_GiveInventory("ShotgunUpgrade",1)
TNT1 A 0 A_GiveInventory("UpgradeChoiceActive",1)
TNT1 A 0 A_TakeInventory("UpgradeTimer",999)
stop
}
}

actor Upgrader2 : BaseUpgrade
{
inventory.icon "UKIUPG"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("VelocityUpgrade",1)
TNT1 A 0 A_GiveInventory("GuidedUpgrade",1)
TNT1 A 0 A_GiveInventory("ArcingUpgrade",1)
TNT1 A 0 A_GiveInventory("UpgradeChoiceActive",1)
TNT1 A 0 A_TakeInventory("UpgradeTimer",999)
stop
}
}

actor Upgrader3 : BaseUpgrade
{
inventory.icon "UKIUPG"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("NerfUpgrade",1)
TNT1 A 0 A_GiveInventory("BouncingUpgrade",1)
TNT1 A 0 A_GiveInventory("ExplosiveUpgrade",1)
TNT1 A 0 A_GiveInventory("UpgradeChoiceActive",1)
TNT1 A 0 A_TakeInventory("UpgradeTimer",999)
stop
}
}

actor SnipeUpgrade : BaseUpgrade
{
inventory.icon "UKISNI"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("SnipeFlag",1)
TNT1 A 0 A_TakeInventory("SnipeUpgrade",1)
TNT1 A 0 A_TakeInventory("RapidUpgrade",1)
TNT1 A 0 A_TakeInventory("ShotgunUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotSnipeUpgrade : SnipeUpgrade
{
+AUTOACTIVATE
}

actor RapidUpgrade : BaseUpgrade
{
inventory.icon "UKIRPD"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("RapidFlag",1)
TNT1 A 0 A_TakeInventory("SnipeUpgrade",1)
TNT1 A 0 A_TakeInventory("RapidUpgrade",1)
TNT1 A 0 A_TakeInventory("ShotgunUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}
actor BotRapidUpgrade : RapidUpgrade
{
+AUTOACTIVATE
}

actor ShotgunUpgrade : BaseUpgrade
{
inventory.icon "UKISHT"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("ShotgunFlag",1)
TNT1 A 0 A_TakeInventory("SnipeUpgrade",1)
TNT1 A 0 A_TakeInventory("RapidUpgrade",1)
TNT1 A 0 A_TakeInventory("ShotgunUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotShotgunUpgrade : ShotgunUpgrade
{
+AUTOACTIVATE
}

actor GuidedUpgrade : BaseUpgrade
{
inventory.icon "UKIAMP"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("GuidedFlag",1)
TNT1 A 0 A_TakeInventory("GuidedUpgrade",1)
TNT1 A 0 A_TakeInventory("ArcingUpgrade",1)
TNT1 A 0 A_TakeInventory("VelocityUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotGuidedUpgrade : GuidedUpgrade
{
+AUTOACTIVATE
}

actor ArcingUpgrade : BaseUpgrade
{
inventory.icon "UKIARC"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("ArcingFlag",1)
TNT1 A 0 A_TakeInventory("GuidedUpgrade",1)
TNT1 A 0 A_TakeInventory("ArcingUpgrade",1)
TNT1 A 0 A_TakeInventory("VelocityUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotArcingUpgrade : ArcingUpgrade
{
+AUTOACTIVATE
}

actor VelocityUpgrade : BaseUpgrade
{
inventory.icon "UKIVEL"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("VelocityFlag",1)
TNT1 A 0 A_TakeInventory("GuidedUpgrade",1)
TNT1 A 0 A_TakeInventory("ArcingUpgrade",1)
TNT1 A 0 A_TakeInventory("VelocityUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotVelocityUpgrade : VelocityUpgrade
{
+AUTOACTIVATE
}

actor NerfUpgrade : BaseUpgrade
{
inventory.icon "UKINER"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("NerfFlag",1)
TNT1 A 0 A_TakeInventory("NerfUpgrade",1)
TNT1 A 0 A_TakeInventory("ExplosiveUpgrade",1)
TNT1 A 0 A_TakeInventory("BouncingUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotNerfUpgrade : NerfUpgrade
{
+AUTOACTIVATE
}

actor ExplosiveUpgrade : BaseUpgrade
{
inventory.icon "UKIEXP"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("ExplodingFlag",1)
TNT1 A 0 A_TakeInventory("NerfUpgrade",1)
TNT1 A 0 A_TakeInventory("ExplosiveUpgrade",1)
TNT1 A 0 A_TakeInventory("BouncingUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotExplosiveUpgrade : ExplosiveUpgrade
{
+AUTOACTIVATE
}

actor BouncingUpgrade : BaseUpgrade
{
inventory.icon "UKIBOU"
states
{
Use:
TNT1 A 0 A_PlaySoundEx("item/refill","Voice")
TNT1 A 0 A_GiveInventory("BouncingFlag",1)
TNT1 A 0 A_TakeInventory("NerfUpgrade",1)
TNT1 A 0 A_TakeInventory("ExplosiveUpgrade",1)
TNT1 A 0 A_TakeInventory("BouncingUpgrade",1)
TNT1 A 0 A_TakeInventory("UpgradeChoiceActive",1)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_UKIINFO",0)
stop
}
}

actor BotBouncingUpgrade : BouncingUpgrade
{
+AUTOACTIVATE
}



actor Holocube : BasicClientside
{
Scale 1.0
States
{
Spawn:
UKIQ PQ 4
UKIQ RST 4 A_Stop
stop
}
}

actor Holocube2 : Holocube
{
Scale 0.7
}

actor Holocube3 : Holocube
{
Scale 1.3
}

actor VelocityTrail : BasicClientside
{
Scale 2.5
States
{
Spawn:
TNT1 A 2
UKIR CC 4 A_ScaleVelocity(.2)
UKIR DEF 4
stop
}
}

actor GuidedTrail : BasicClientside
{
Scale 2.5
States
{
Spawn:
TNT1 A 2
UKIR IJKL 3
stop
}
}

actor ArcingTrail : BasicClientside
{
Scale 2.0
renderstyle Add
States
{
Spawn:
TNT1 A 2
TNT1 A 0 A_JumpIfInTargetInventory("SnipeFlag",1,"SnipeSizeBoost")
TNT1 A 0 A_JumpIfInTargetInventory("ShotgunFlag",1,"ShotgunSizeBoost")
UKIQ N 0 A_Fadeout(0.4)
UKIQ N 4 
Goto Spawn+3
SnipeSizeBoost:
TNT1 A 0 A_SetScale(3,3)
goto Spawn+3
ShotgunSizeBoost:
TNT1 A 0 A_SetScale(1.5,1.5)
goto Spawn+3
}
}

actor UkiShot
{
+MTHRUSPECIES
Obituary "$OB_UKIMODIFY" 
PROJECTILE 
Gravity 0.5
Radius 7 
Height 7 
scale 2.5
damage (CallACS("CSACS_UKIDAMAGE"))
damagetype "UkiRevolver"
translation "192:192=21:21", "198:198=187:187"
+FORCEXYBILLBOARD 
+NOTARGETSWITCH
+SEEKERMISSILE
+HEXENBOUNCE
+SCREENSEEKER
bouncecount 4
bouncefactor 0.93
speed 35 
States
{
Spawn:
UKIQ M 0 
UKIQ M 0 A_JumpIfInTargetInventory("NerfFlag",1,"Nerf")
UKIQ M 0 A_JumpIfInTargetInventory("BouncingFlag",1,3)
UKIQ M 0 A_ChangeFlag("HEXENBOUNCE", 0)
UKIQ M 0 A_CheckFloor("Death")
UKIQ M 0 A_JumpIfInTargetInventory("ArcingFlag",1,"Arcing")
UKIQ M 0 A_JumpIfInTargetInventory("VelocityFlag",1,"Velocity")
UKIQ M 0 A_JumpIfInTargetInventory("GuidedFlag",1,"Guided")
Spawn2:
UKIQ MNONM 2
loop
Nerf:
TNT1 A 0 A_SetDamageType("UkiNerf")
goto Spawn+2
Guided:
UKIQ M 2 //A_SeekerMissile(0, 1, SMF_LOOK|SMF_PRECISE, 256, 7)
UKIQ B 0 A_SpawnItemEx("GuidedTrail",0,0,0,random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM)
UKIQ N 2 //A_SeekerMissile(0, 1, SMF_LOOK|SMF_PRECISE, 256, 7)
UKIQ B 0 A_SpawnItemEx("GuidedTrail",0,0,0,random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM)
UKIQ O 2 //A_SeekerMissile(0, 1, SMF_LOOK|SMF_PRECISE, 256, 7)
UKIQ B 0 A_SpawnItemEx("GuidedTrail",0,0,0,random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM)
UKIQ N 2 //A_SeekerMissile(0, 1, SMF_LOOK|SMF_PRECISE, 256, 7)
UKIQ B 0 A_SpawnItemEx("GuidedTrail",0,0,0,random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM)
UKIQ M 2 ACS_ExecuteAlways(259, 0, 1)//A_SeekerMissile(0, 1, SMF_LOOK|SMF_PRECISE, 256, 7)
UKIQ B 0 A_SpawnItemEx("GuidedTrail",0,0,0,random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM)
UKIQ M 0 A_JumpIfInTargetInventory("SnipeFlag",1,"SnipeHome")
BLKH B 0 A_ChangeVelocity(cos(-pitch)*35, 0, sin(-pitch)*35, CVF_RELATIVE|CVF_REPLACE)
loop
SnipeHome:
BLKH B 0 A_ChangeVelocity(cos(-pitch)*64, 0, sin(-pitch)*64, CVF_RELATIVE|CVF_REPLACE)
goto Guided
Arcing:
//UKIQ M 0 A_ScaleVelocity(1.3)
UKIQ B 0 A_ChangeFlag("NoGravity",0)
UKIQ M 2 
UKIQ B 0 A_SpawnItemEx("ArcingTrail",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ N 2 
UKIQ B 0 A_SpawnItemEx("ArcingTrail",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ O 2 
UKIQ B 0 A_SpawnItemEx("ArcingTrail",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ N 2 
UKIQ B 0 A_SpawnItemEx("ArcingTrail",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 2 
UKIQ B 0 A_SpawnItemEx("ArcingTrail",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
goto Arcing+1
Velocity:
UKIQ M 0 A_Changeflag("RIPPER", 1)
UKIQ N 2 A_ScaleVelocity(1.04)
UKIQ B 0 A_SpawnItemEx("VelocityTrail",random2(5),random2(5),random2(5),random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
UKIQ N 2 A_ScaleVelocity(1.04) 
UKIQ O 2 A_ScaleVelocity(1.04)
UKIQ B 0 A_SpawnItemEx("VelocityTrail",random2(5),random2(5),random2(5),random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
UKIQ N 2 A_ScaleVelocity(1.04)
UKIQ N 2 A_ScaleVelocity(1.04)
Goto Velocity2
Velocity2:
UKIR GH 2
UKIQ B 0 A_SpawnItemEx("VelocityTrail",random2(5),random2(5),random2(5),random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
UKIR H 2 A_ScaleVelocity(1.04)
UKIR H 2 A_ScaleVelocity(1.04)
UKIQ B 0 A_SpawnItemEx("VelocityTrail",random2(5),random2(5),random2(5),random(-momx/5,-momx/3),random(-momy/5,-momy/3),random(-momz/5,-momz/3),0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
goto Velocity2+3
Death:
UKIQ B 0 A_ChangeFlag("NoGravity",1)
UKIQ M 0 A_JumpIfInTargetInventory("ExplodingFlag",1,"ExplodeDeath")
EndDeath:
UKIQ B 0 A_Stop
UKIQ M 0 A_SpawnItemEx("Holocube",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 0 A_SpawnItemEx("Holocube2",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 0 A_SpawnItemEx("Holocube3",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 0 A_JumpIfInTargetInventory("SnipeFlag",1,"SnipeEndDeath")
UKIQ YZ 4
UKIR AB 4
stop 
SnipeEndDeath:
UKIQ M 0 A_SpawnItemEx("Holocube",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 0 A_SpawnItemEx("Holocube2",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
UKIQ M 0 A_SpawnItemEx("Holocube3",0,0,0,random2(5),random2(5),random2(5),0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
goto EndDeath+5
ExplodeDeath:
UKIQ M 0 A_JumpIfInTargetInventory("ShotgunFlag",1,"RapidExplodeDeath")
UKIQ M 0 A_JumpIfInTargetInventory("RapidFlag",1,"RapidExplodeDeath")
CBOM K 0 A_SpawnItemEx("UkiSnipeExplode",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION)
goto EndDeath
RapidExplodeDeath:
CBOM K 0 A_SpawnItemEx("UkiRapidExplode",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION)
goto EndDeath
}
}

actor UkiSnipeShot : UkiShot
{
Radius 12 
Height 12 
scale 3
speed 64
}

actor UkiRapidShot : UkiShot
{
Radius 6
Height 6
scale 2.0 
}

actor UkiShotgunShot : UkiShot
{
Radius 5 
Height 5 
scale 1.5
}


//I blame Trill :P
actor UkiShotB : UkiShot {translation "192:192=205:205", "198:198=74:74", "210:210=205:205"}
actor UkiShotR : UkiShot {translation "192:192=171:171", "198:198=41:41", "210:210=171:171"}
actor UkiShotG : UkiShot {translation "192:192=104:104", "198:198=128:128", "210:210=104:104"}
actor UkiShotY : UkiShot {translation "192:192=229:229", "198:198=232:232", "210:210=229:229"}

actor UkiSnipeShotB : UkiSnipeShot {translation "192:192=205:205", "198:198=74:74", "210:210=205:205"}
actor UkiSnipeShotR : UkiSnipeShot {translation "192:192=171:171", "198:198=41:41", "210:210=171:171"}
actor UkiSnipeShotG : UkiSnipeShot {translation "192:192=104:104", "198:198=128:128", "210:210=104:104"}
actor UkiSnipeShotY : UkiSnipeShot {translation "192:192=229:229", "198:198=232:232", "210:210=229:229"}

actor UkiRapidShotB : UkiRapidShot {translation "192:192=205:205", "198:198=74:74", "210:210=205:205"}
actor UkiRapidShotR : UkiRapidShot {translation "192:192=171:171", "198:198=41:41", "210:210=171:171"}
actor UkiRapidShotG : UkiRapidShot {translation "192:192=104:104", "198:198=128:128", "210:210=104:104"}
actor UkiRapidShotY : UkiRapidShot {translation "192:192=229:229", "198:198=232:232", "210:210=229:229"}

actor UkiShotgunShotB : UkiShotgunShot {translation "192:192=205:205", "198:198=74:74", "210:210=205:205"}
actor UkiShotgunShotR : UkiShotgunShot {translation "192:192=171:171", "198:198=41:41", "210:210=171:171"}
actor UkiShotgunShotG : UkiShotgunShot {translation "192:192=104:104", "198:198=128:128", "210:210=104:104"}
actor UkiShotgunShotY : UkiShotgunShot {translation "192:192=229:229", "198:198=232:232", "210:210=229:229"}

actor UkiShotMainFire : BasicTeamColorPickup
{
States
{
FireX:
TST1 A 0 A_FireCustomMissile("UkiShot",0,0,8,0)
stop
FireB:
TST1 A 0 A_FireCustomMissile("UkiShotB",0,0,8,0)
stop
FireR:
TST1 A 0 A_FireCustomMissile("UkiShotR",0,0,8,0)
stop
FireG:
TST1 A 0 A_FireCustomMissile("UkiShotG",0,0,8,0)
stop
FireY:
TST1 A 0 A_FireCustomMissile("UkiShotY",0,0,8,0)
stop
}
}

actor UkiSnipeShotMainFire : UkiShotMainFire
{
States
{
FireX:
TST1 A 0 A_FireCustomMissile("UkiSnipeShot",0,0,8,0)
stop
FireB:
TST1 A 0 A_FireCustomMissile("UkiSnipeShotB",0,0,8,0)
stop
FireR:
TST1 A 0 A_FireCustomMissile("UkiSnipeShotR",0,0,8,0)
stop
FireG:
TST1 A 0 A_FireCustomMissile("UkiSnipeShotG",0,0,8,0)
stop
FireY:
TST1 A 0 A_FireCustomMissile("UkiSnipeShotY",0,0,8,0)
stop
}
}

actor UkiRapidShotMainFire : UkiShotMainFire
{
States
{
FireX:
TST1 A 0 A_FireCustomMissile("UkiRapidShot",random2(3),1,8,0)
stop
FireB:
TST1 A 0 A_FireCustomMissile("UkiRapidShotB",random2(3),1,8,0)
stop
FireR:
TST1 A 0 A_FireCustomMissile("UkiRapidShotR",random2(3),1,8,0)
stop
FireG:
TST1 A 0 A_FireCustomMissile("UkiRapidShotG",random2(3),1,8,0)
stop
FireY:
TST1 A 0 A_FireCustomMissile("UkiRapidShotY",random2(3),1,8,0)
stop
}
}

actor UkiShotgunShotMainFire : UkiShotMainFire
{
States
{
FireX:
UKIQ B 0 A_FireCustomMissile("UkiShotgunShot",Random(-1, 1),0,8,0,0,0) 
UKIQ B 0 A_FireCustomMissile("UkiShotgunShot",random(5,-5),0,8,0,0,random(1,-1))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShot",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShot",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShot",random(5,-5),0,8,0,0,random(5,-5))
stop
FireB:
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotB",Random(-1, 1),0,8,0,0,0) 
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotB",random(5,-5),0,8,0,0,random(1,-1))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotB",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotB",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotB",random(5,-5),0,8,0,0,random(5,-5))
stop
FireR:
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotR",Random(-1, 1),0,8,0,0,0) 
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotR",random(5,-5),0,8,0,0,random(1,-1))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotR",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotR",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotR",random(5,-5),0,8,0,0,random(5,-5))
stop
FireG:
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotG",Random(-1, 1),0,8,0,0,0) 
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotG",random(5,-5),0,8,0,0,random(1,-1))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotG",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotG",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotG",random(5,-5),0,8,0,0,random(5,-5))
stop
FireY:
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotY",Random(-1, 1),0,8,0,0,0) 
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotY",random(5,-5),0,8,0,0,random(1,-1))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotY",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotY",random(5,-5),0,8,0,0,random(3,-3))
UKIQ B 0 A_FireCustomMissile("UkiShotgunShotY",random(5,-5),0,8,0,0,random(5,-5))
stop
}
}

actor UkiSnipeExplode
{
Obituary "%o got modified by %k's *insert name here*." 
scale 2.5
damagetype "UkiRevolver"
Radius 5
Height 5
+NOGRAVITY
States
{
Spawn:
TNT1 A 0
Death:
CBOM K 0 A_PlaySoundEx("weapon/crackerexplode", "Weapon") 
ASEX A 0 A_Explode(CallACS("CSACS_UKIDAMAGE",1),96,0, 0, 24)
ASEX ABCDEF 2
stop
}
}

actor UkiRapidExplode : UkiSnipeExplode
{
scale 1.0
States
{
Spawn:
TNT1 A 0
Death:
CBOM K 0 A_PlaySoundEx("weapon/crackerexplode", "Weapon") 
ASEX A 0 A_Explode(CallACS("CSACS_UKIDAMAGE",1),64,0, 0, 24)
ASEX ABCDEF 2
stop
}
}

actor UkiVisionSpawner
{
PROJECTILE
Radius 16
Height 48
scale 2.5
-NOGRAVITY
+Ripper
+FORCEXYBILLBOARD
+DOOMBOUNCE
+CANBOUNCEWATER
BounceCount 3
WallBounceFactor 0.5
BounceFactor 0.1
Obituary "%o was doubled up on by %k's holoclone." 
speed 40
damage (0) 
States
{
Spawn:
UKIQ U 0 
UKIQ U 0 ThrustThingZ(0, 20, 0, 1)
UKIQ UUVVWWXX 1 A_CheckFloor("Death")
Goto Spawn+2
Death:
TNT1 A 0 A_ChangeFlag("NOGRAVITY", 1)
TNT1 A 0 A_Stop 
TNT1 A 0 A_SpawnItemEx("UkiVision",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERTRANSLATION)
stop
}
}

actor UkiVision
{
-NOGRAVITY
+MISSILE
+THRUACTORS
+DONTBLAST
+SKYEXPLODE
+DONTSPLASH
-COUNTKILL
Renderstyle "Translucent"
Alpha 0.1
Damage (0)
speed 0
scale 2.5
mass 99999999
Radius 16
Height 48
reactiontime 35

Obituary "%o was doubled up on by %k's holoclone." 
translation "192:192=21:21", "198:198=187:187"
states
{
Spawn:
UKIS F 0 
Goto Spawn2
Spawn2:
//UKIS F 0 Thing_ChangeTID(0, ACS_ExecuteWithResult(257)-100)
UKIS F 0 Thing_Remove(ACS_ExecuteWithResult(257)-100)
UKIS FFFFFF 1 A_FadeIn(0.1)
UKIS F 0 A_GiveToTarget("UkiRemoteControl", 1)
UKIS F 0 A_GiveToTarget("UkiPOVFlag", 1)
UKIS F 0 A_SpawnItemEx("UkiRemotePoV", 0, 0, 48)
Goto See
See:
UKIS F 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "RemoteControl")
UKIS F 2 A_GiveToTarget("TargetMarker", 1)
UKIS F 2 ACS_ExecuteAlways(989, 0, ACS_ExecuteWithResult(257)+100, 32)
Goto Missile
Missile:
UKIS F 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
UKIS F 0 A_JumpIfInTargetInventory("SnipeFlag",1,"SnipeShot")
UKIS F 0 A_JumpIfInTargetInventory("RapidFlag",1,"RapidShot")
UKIS F 0 A_JumpIfInTargetInventory("ShotgunFlag",1,"ShotgunShot")
UKIS A 0 A_PlaySoundEx("weapon/UkiRevolverShot","Voice")
UKIS F 0 A_JumpIfInTargetInventory("LightTeamFlag",1,"LightShot")
UKIS F 0 A_JumpIfInTargetInventory("WilyTeamFlag",1,"WilyShot")
UKIS F 0 A_JumpIfInTargetInventory("CossackTeamFlag",1,"CossackShot")
UKIS F 0 A_JumpIfInTargetInventory("KingTeamFlag",1,"KingShot")
UKIS F 5 A_CustomMissile("UkiShot",32,0,0,2,-pitch)
goto ShotCooldown
LightShot:
UKIS F 5 A_CustomMissile("UkiShotB",32,0,0,2,-pitch)
goto ShotCooldown
WilyShot:
UKIS F 5 A_CustomMissile("UkiShotR",32,0,0,2,-pitch)
goto ShotCooldown
CossackShot:
UKIS F 5 A_CustomMissile("UkiShotG",32,0,0,2,-pitch)
goto ShotCooldown
KingShot:
UKIS F 5 A_CustomMissile("UkiShotY",32,0,0,2,-pitch)
goto ShotCooldown
ShotCooldown:
UKIS G 4 
UKIS GG 0 A_CountDown
UKIS G 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "MissileDelay")
Goto See 
SnipeShot:
UKIS A 0 A_PlaySoundEx("weapon/pshot","Voice")
UKIS F 0 A_JumpIfInTargetInventory("LightTeamFlag",1,"LightSnipeShot")
UKIS F 0 A_JumpIfInTargetInventory("WilyTeamFlag",1,"WilySnipeShot")
UKIS F 0 A_JumpIfInTargetInventory("CossackTeamFlag",1,"CossackSnipeShot")
UKIS F 0 A_JumpIfInTargetInventory("KingTeamFlag",1,"KingSnipeShot")
UKIS F 4 A_CustomMissile("UkiSnipeShot",32,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION, -pitch)
goto SnipeShotCooldown
LightSnipeShot:
UKIS F 4 A_CustomMissile("UkiSnipeShotB",32,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION, -pitch)
goto SnipeShotCooldown
WilySnipeShot:
UKIS F 4 A_CustomMissile("UkiSnipeShotR",32,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION, -pitch)
goto SnipeShotCooldown
CossackSnipeShot:
UKIS F 4 A_CustomMissile("UkiSnipeShotG",32,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION, -pitch)
goto SnipeShotCooldown
KingSnipeShot:
UKIS F 4 A_CustomMissile("UkiSnipeShotY",32,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION, -pitch)
goto SnipeShotCooldown
SnipeShotCooldown:
UKIS G 18 
UKIS GG 0 A_CountDown
UKIS G 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "MissileDelay")
goto See
RapidShot:
UKIS A 0 A_PlaySoundEx("weapon/UkiRevolverShot","Voice")
UKIS F 0 A_JumpIfInTargetInventory("LightTeamFlag",1,"LightRapidShot")
UKIS F 0 A_JumpIfInTargetInventory("WilyTeamFlag",1,"WilyRapidShot")
UKIS F 0 A_JumpIfInTargetInventory("CossackTeamFlag",1,"CossackRapidShot")
UKIS F 0 A_JumpIfInTargetInventory("KingTeamFlag",1,"KingRapidShot")
UKIS F 2 A_CustomMissile("UkiRapidShot",32,0,random(3,-3),CMF_AIMDIRECTION, -pitch) 
goto RapidCooldown
LightRapidShot:
UKIS F 2 A_CustomMissile("UkiRapidShotB",32,0,random(3,-3),CMF_AIMDIRECTION, -pitch)
goto RapidCooldown 
WilyRapidShot:
UKIS F 2 A_CustomMissile("UkiRapidShotR",32,0,random(3,-3),CMF_AIMDIRECTION, -pitch)
goto RapidCooldown 
CossackRapidShot:
UKIS F 2 A_CustomMissile("UkiRapidShotG",32,0,random(3,-3),CMF_AIMDIRECTION, -pitch)
goto RapidCooldown 
KingRapidShot:
UKIS F 2 A_CustomMissile("UkiRapidShotY",32,0,random(3,-3),CMF_AIMDIRECTION, -pitch)
goto RapidCooldown 
RapidCooldown:
UKIS G 1 
UKIS G 0 A_CountDown
UKIS G 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "MissileDelay")
goto See
ShotgunShot:
UKIS A 0 A_PlaySoundEx("weapon/MagnetMissile","Voice")
UKIS F 0 A_JumpIfInTargetInventory("LightTeamFlag",1,"LightShotgunShot")
UKIS F 0 A_JumpIfInTargetInventory("WilyTeamFlag",1,"WilyShotgunShot")
UKIS F 0 A_JumpIfInTargetInventory("CossackTeamFlag",1,"CossackShotgunShot")
UKIS F 0 A_JumpIfInTargetInventory("KingTeamFlag",1,"KingShotgunShot")
UKIY B 0 A_CustomMissile("UkiShotgunShot",32,0,random(1,-1),CMF_AIMDIRECTION, -pitch) 
UKIY B 0 A_CustomMissile("UkiShotgunShot",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-1, 1)) 
UKIY B 0 A_CustomMissile("UkiShotgunShot",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShot",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShot",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-5, 5)) 
goto ShotgunCooldown
LightShotgunShot:
UKIY B 0 A_CustomMissile("UkiShotgunShotB",32,0,random(1,-1),CMF_AIMDIRECTION, -pitch) 
UKIY B 0 A_CustomMissile("UkiShotgunShotB",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-1, 1)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotB",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotB",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotB",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-5, 5)) 
goto ShotgunCooldown
WilyShotgunShot:
UKIY B 0 A_CustomMissile("UkiShotgunShotR",32,0,random(1,-1),CMF_AIMDIRECTION, -pitch) 
UKIY B 0 A_CustomMissile("UkiShotgunShotR",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-1, 1)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotR",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotR",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotR",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-5, 5)) 
goto ShotgunCooldown
CossackShotgunShot:
UKIY B 0 A_CustomMissile("UkiShotgunShotG",32,0,random(1,-1),CMF_AIMDIRECTION, -pitch) 
UKIY B 0 A_CustomMissile("UkiShotgunShotG",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-1, 1)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotG",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotG",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotG",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-5, 5)) 
goto ShotgunCooldown
KingShotgunShot:
UKIY B 0 A_CustomMissile("UkiShotgunShotY",32,0,random(1,-1),CMF_AIMDIRECTION, -pitch) 
UKIY B 0 A_CustomMissile("UkiShotgunShotY",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-1, 1)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotY",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotY",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-3, 3)) 
UKIY B 0 A_CustomMissile("UkiShotgunShotY",32,0,random(5,-5),CMF_AIMDIRECTION, -pitch + Random(-5, 5)) 
goto ShotgunCooldown
ShotgunCooldown:
UKIS G 3 
UKIS F 25
UKIS GGG 0 A_CountDown
UKIS G 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "MissileDelay")
goto See
MissileDelay:
UKIS F 2
UKIS F 0 A_TakeFromTarget("UkiAttackFlag", 1)
UKIS F 0 A_JumpIfInTargetInventory("UkiRemoteFlag", 1, "RemoteControl")
Goto See
RemoteControl:
UKIS F 1 ACS_ExecuteAlways(259, 0, 1)
UKIS F 0 A_JumpIfInTargetInventory("UkiAttackFlag", 1, "Missile")
UKIS F 0 A_JumpIfInventory("UkiRemoteFlag", 1, "RemoteControl")
UKIS F 2
Goto See
Death:
MMFX B 0 A_SetTranslucent(0.7)
MMFX B 0 A_TakeFromTarget("UkiRemoteControlOff", 1)
MMFX B 0 A_TakeFromTarget("UkiRemoteControl", 1)
MMFX B 0 A_TakeFromTarget("UkiRemoteFlag", 1)
MMFX B 0 A_TakeFromTarget("UkiPOVFlag", 1)
MMFX B 0 A_GiveToTarget("UkiPOVCancel", 1)
MMFX BCDE 2 
stop
}
}

actor UkiRemotePoV
{
PROJECTILE
+NOCLIP
+NOINTERACTION
+DONTBLAST
Renderstyle "none"
Damage (0)
speed 0
scale 2.5
mass 99999999
Radius 1
Height 1
States
{
Spawn:
PLAY A 0
PLAY A 0 Thing_ChangeTID(0, ACS_ExecuteWithResult(257)-100)
Goto Spawn2
Spawn2:
PLAY A 1 ACS_NamedExecuteAlways("CSACS_UKIREMOTEAIM", 0)
PLAY A 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
PLAY A 0 A_JumpIfInTargetInventory("UkiPOVCancel", 1, "Death")
loop
Death:
TNT1 A 0
stop
}
}

actor GiveNerf : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0 A_JumpIfInventory("PowerNerf", 1, 2)
TNT1 A 0 A_SpawnItemEx("NerfWatcher")
TNT1 A 0 A_GiveInventory("Nerfed", 1)
stop
}
}

actor Nerfed : PowerupGiver
{
  inventory.maxamount 0
  powerup.duration -4
  powerup.type "PowerNerf"
  +INVENTORY.AUTOACTIVATE
  +INVENTORY.ALWAYSPICKUP
  states
  {
  Spawn:
    TNT1 A 6
    loop
  }
}

actor PowerNerf : PowerDamage
{
damagefactor "normal", .6
}

actor NerfWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
States
{
Spawn:
TNT1 A 0 
TNT1 A 3 A_GiveToTarget("NerfFX", 1)
TNT1 A 0 A_JumpIfInTargetInventory("PowerNerf", 1, "Spawn")
stop
}
}

actor NerfFX : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("NerfGFX", random(16, 48), 0, Random(16,48), 0, 0, 0, random(0, 359))
stop
}
}

actor NerfGFX
{
+THRUACTORS
+CLIENTSIDEONLY
+FORCEXYBILLBOARD
+MISSILE
Damage(0)
Scale 1.0
Height 0
Radius 0
Gravity 0.1
States
{
Spawn:
UKIH M 4 A_Fadeout(0.2)
loop
}
}

actor RemoteSFX
{
+NOINTERACTION
+NOCLIP
Height 0
Radius 0
States
{
Spawn:
TNT1 A 2
TNT1 A 0 A_PlaySoundEx("weapon/GravityHold", "Body")
stop
}
}