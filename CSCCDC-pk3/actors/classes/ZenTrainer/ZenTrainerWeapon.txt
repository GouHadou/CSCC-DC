const int ZEN_ARANGE = 400; //300 //512
const int ZEN_ARANGEX = 600; //350 //768

const int Item_ZenHeal = 3;
const int Item_ZenPower = 4;
const int Item_ZenHaste = 6;

const int Item_ZenHealEX = 8;
const int Item_ZenPowerEX = 9;
const int Item_ZenHasteEX = 11;


actor ZenTrainerWep : CSCCWepBase
{
Weapon.AmmoUse 0
Weapon.AmmoUse2 2
Inventory.Pickupmessage "$PU_ZENTRAINERWEP"
Obituary "$OB_ZENTRAINERWEP"
Tag "$TAG_ZENSPHERE"
weapon.ammotype "ZenTrainerAmmo1"
weapon.ammotype2 "ZenTrainerAmmo1"
DropItem "ZenSphereWepCS"
States
{
Spawn:
TNT1 A 1
stop

Deselect:
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
ZNTN A 1 A_Lower
Loop
Select:
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
ZNTN A 1 A_Raise
Loop

Ready:
TNT1 A 0 
ZNTN A 1 ACS_ExecuteAlways(998,0,DYE_ZENTRAINER)
ZNTN A 0 A_GunFlash("Flash")
goto Ready2
Ready2:
ZNTN A 1 A_WeaponReady
ZNTN A 0 A_JumpIfInventory("ZenChangeOrbDelay", 1, "Ready2")
loop
ChangeOrb:
TNT1 A 0 A_GiveInventory("ZenChangeOrb", 1)
Goto Flash
Flash:
TNT1 A 1 A_JumpIfInventory("ZenTrainerAmmo1",0,"FlashReady")
TNT1 A 0 A_JumpIf(CallACS("CSACS_ButtonCheck",BT_RELOAD)==1,"ChangeOrb")
TNT1 A 0 A_JumpIfInventory("IsDead",1,"NoFlash")
goto Flash
FlashReady:
TNT1 A 1 A_JumpIf(CallACS("CSACS_ButtonCheck",BT_USER1)==1,"FlashFire")
TNT1 A 0 A_JumpIf(CallACS("CSACS_ButtonCheck",BT_RELOAD)==1,"ChangeOrb")
TNT1 A 0 A_JumpIfInventory("IsDead",1,"NoFlash")
goto FlashReady
FlashFire:
ZNTN E 0 A_GiveInventory("AuraAmpFlag")
ZNTN EFGHIII 2
ZNTN E 0 A_PlaySoundEx("weapon/thunderbolt","Weapon")
ZNTN IHGFE 2
goto Flash
NoFlash:
TNT1 A 0
stop

Fire:
ZNTN B 0 A_JumpIfInventory("IsBot", 1, "Altfire")
ZNTN B 1 
ZNTN B 0 A_GiveInventory("ZTPsychicBall_M1")
ZNTN CD 2 A_GiveInventory("PsychicBallHold")
ZNTN D 0 A_TakeInventory("ZenOrbGone", 1)
ZNTN D 0 A_Refire
ZNTN DDCCBBBA 2 A_TakeInventory("PsychicBallHold",999)
ZNTN D 0 
Goto Ready2
Hold:
ZNTN R 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN R 0 A_Refire(1)
goto HoldEnd
ZNTN Q 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN Q 0 A_Refire(1)
goto HoldEnd
ZNTN P 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN P 0 A_Refire(1)
goto HoldEnd
ZNTN O 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN O 0 A_Refire(1)
goto HoldEnd
ZNTN N 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN N 0 A_Refire(1)
goto HoldEnd
ZNTN M 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN M 0 A_Refire(1)
goto HoldEnd
ZNTN M 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN M 0 A_Refire(1)
goto HoldEnd
ZNTN N 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN N 0 A_Refire(1)
goto HoldEnd
ZNTN O 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN O 0 A_Refire(1)
goto HoldEnd
ZNTN P 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN P 0 A_Refire(1)
goto HoldEnd
ZNTN Q 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN Q 0 A_Refire(1)
goto HoldEnd
ZNTN R 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN R 0 A_Refire(1)
goto HoldEnd
ZNTN D 2 A_GiveInventory("PsychicBallHold")
"----" A 0 A_JumpIfInventory("ZenOrbGone", 1, "ShotEnd")
ZNTN D 0 A_Refire("Hold")
goto HoldEnd
ShotEnd:
ZNTN D 0 A_TakeInventory("ZenOrbGone", 1)
ZNTN D 0 A_ClearRefire
HoldEnd:
ZNTN DDCCBBBA 2 A_TakeInventory("PsychicBallHold",999)
goto Ready2

Altfire:
ZNTN B 1
ZNTN B 0 A_GiveInventory("ZTPsychicBall_M1")
ZNTN CD 2 A_GiveInventory("PsychicBallHold")
ZNTN DDCCBBBA 2 A_TakeInventory("PsychicBallHold",999)
Goto Ready2

NoAmmo:
ZNTN A 1
goto Ready2
}
}

actor ZenTrainerAmmo1 : Ammo
{
inventory.maxamount 140
inventory.amount 1
+INVENTORY.IGNORESKILL
}

actor ZenTrainerAuraDelay : Powerup {powerup.duration 50}

actor BFlag : Once {}

actor PsychicBallHold : Once {}
actor ZenAltFlashFlag : Once {}

actor AuraFlag_heal : Once {}
actor AuraFlag_power : Once {}
actor AuraFlag_haste : Once {}

actor AuraAmpFlag : Once {}


actor AuraSwitchItem : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
inventory.icon "ClouIcon"
scale 2.0
inventory.pickupmessage "This just in, a high chance of thunder storms today."
+INVBAR
states
{
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("ZenTrainerAuraDelay",1,"nope")
TNT1 A 0 A_GiveInventory("ZenTrainerAuraDelay")
TNT1 A 0 A_JumpIfInventory("AuraFlag_heal",1,"TakeHealGivePower")
TNT1 A 0 A_JumpIfInventory("AuraFlag_power",1,"TakePowerGiveHaste")
TNT1 A 0 A_JumpIfInventory("AuraFlag_haste",1,"TakeHasteGiveHeal")
fail
TakeHealGivePower:
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_TakeInventory("AuraFlag_heal")
TNT1 A 0 A_GiveInventory("AuraFlag_power")
fail
TakePowerGiveHaste:
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_TakeInventory("AuraFlag_power")
TNT1 A 0 A_GiveInventory("AuraFlag_haste")
fail
TakeHasteGiveHeal:
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_TakeInventory("AuraFlag_haste")
TNT1 A 0 A_GiveInventory("AuraFlag_heal")
fail
nope:
TNT1 A 0
fail
}
}


actor AuraProcItem : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
states
{
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("AuraAmpFlag",1,"AmpedAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_heal",1,"HealAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_power",1,"PowerAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_haste",1,"HasteAura")
stop

HealAura:
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenHeal,ZEN_ARANGE,1)
stop
PowerAura:
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenPower,ZEN_ARANGE,1)
stop
HasteAura:
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenHaste,ZEN_ARANGE,1)
stop

    AmpedAura:
    TNT1 A 0 A_JumpIfInventory("AuraFlag_heal",1,"HealAuraEX")
    TNT1 A 0 A_JumpIfInventory("AuraFlag_power",1,"PowerAuraEX")
    TNT1 A 0 A_JumpIfInventory("AuraFlag_haste",1,"HasteAuraEX")
    stop

    HealAuraEX:
    TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenHealEX,ZEN_ARANGEX,1)
    stop
    PowerAuraEX:
    TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenPowerEX,ZEN_ARANGEX,1)
    stop
    HasteAuraEX:
    TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Item_ZenHasteEX,ZEN_ARANGEX,1)
    stop

nope:
TNT1 A 0
fail
}
}


actor AuraProcFXItem : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
states
{
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("AuraFlag_heal",1,"HealAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_power",1,"PowerAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_haste",1,"HasteAura")
fail
HealAura:
TNT1 AAAA 0 A_SpawnItemEx("ZNAura_Heal",ZEN_ARANGE,0,0,0,0,8,random(0,359),1)
stop
PowerAura:
TNT1 AAAA 0 A_SpawnItemEx("ZNAura_Attack",ZEN_ARANGE,0,0,0,0,8,random(0,359),1)
stop
HasteAura:
TNT1 AAAA 0 A_SpawnItemEx("ZNAura_Haste",ZEN_ARANGE,0,0,0,0,8,random(0,359),1)
stop
nope:
TNT1 A 0
fail
}
}

actor AmpedAuraProcFXItem : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
states
{
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("AuraFlag_heal",1,"HealAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_power",1,"PowerAura")
TNT1 A 0 A_JumpIfInventory("AuraFlag_haste",1,"HasteAura")
stop
HealAura:
TNT1 AAAAAAAA 0 A_SpawnItemEx("ZNAura_Heal",ZEN_ARANGEX,0,0,0,0,8,random(0,359),1)
TNT1 AAAAA 0 A_SpawnItemEx("ZNAura_Heal",0,0,64,random(2,4),0,4,random(0,359),1)
stop
PowerAura:
TNT1 AAAAAAAA 0 A_SpawnItemEx("ZNAura_Attack",ZEN_ARANGEX,0,0,0,0,8,random(0,359),1)
TNT1 AAA 0 A_SpawnItemEx("ZNAura_Attack",0,0,64,random(2,4),0,4,random(0,359),1)
stop
HasteAura:
TNT1 AAAAAAAA 0 A_SpawnItemEx("ZNAura_Haste",ZEN_ARANGEX,0,0,0,0,8,random(0,359),1)
TNT1 AAA 0 A_SpawnItemEx("ZNAura_Haste",0,0,64,random(2,4),0,4,random(0,359),1)
stop
nope:
TNT1 A 0
stop
}
}



actor ZenAuraHandler : BasicHelper 
{
+MISSILE
States
{
Spawn:
TNT1 A 0
TNT1 A 5
TNT1 A 0 A_Jump(256,"Spawn.Basic")
Goto Spawn.Basic

Spawn.Basic:
TNT1 A 1
TNT1 A 0 A_JumpIf(CallACS("core_targetexists")==0,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("AuraAmpFlag",1,"Spawn.Amped")
TNT1 A 0 A_GiveToTarget("ZenTrainerAmmo1",4)
TNT1 A 0 A_GiveToTarget("AuraProcItem")
TNT1 AAAAA 2 A_GiveToTarget("AuraProcFXItem")
TNT1 A 1 A_Jump(256,"Spawn.Basic")
Goto Spawn.Basic


Spawn.Amped:
TNT1 A 1
TNT1 A 0 A_JumpIf(CallACS("core_targetexists")==0,"DeathTake")
TNT1 A 0 A_TakeFromTarget("ZenTrainerAmmo1",1)
TNT1 A 0 A_GiveToTarget("AuraProcItem")
TNT1 A 0 A_GiveToTarget("AmpedAuraProcFXItem")
TNT1 A 2
TNT1 A 0 A_JumpIfInTargetInventory("ZenTrainerAmmo1",1,"Spawn.Amped")
TNT1 A 5
TNT1 A 0 A_TakeFromTarget("AuraAmpFlag",99)
TNT1 A 0 A_Jump(256,"Spawn.Basic")
Goto Spawn.Basic

Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AuraAmpFlag",99)
stop
}
}

actor ZTPsychicBall
{
PROJECTILE
Translation "192:192=228:228","198:198=229:229","0:0=167:167"
Obituary "$OB_ZENPSYCHICBALL"
DamageType "ZTPsychicBall"
Radius 12
Height 12
scale 2.5
speed 55
Damage (10)
+HITTRACER
+BOUNCEONWALLS
+BOUNCEONFLOORS
+BOUNCEONCEILINGS
+CANBOUNCEWATER
+NOTARGETSWITCH
+SKYEXPLODE
+FORCEXYBILLBOARD
+MTHRUSPECIES
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_PlaySoundEx("weapon/blackholebomb","Weapon",1)
BLKH BCDE 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
BLKH B 0 A_JumpIfInTargetInventory("PsychicBallHold",1,"Hold")
BLKH BCDE 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
goto StopNow

Hold:
BLKH BCDE 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
Holding:
BLKH B 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
BLKH B 1 A_JumpIfInTargetInventory("PsychicBallHold",1,1)
goto StopNow
BLKH C 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
BLKH C 1 A_JumpIfInTargetInventory("PsychicBallHold",1,1)
goto StopNow
BLKH D 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
BLKH D 1 A_JumpIfInTargetInventory("PsychicBallHold",1,1)
goto StopNow
BLKH E 1 A_SpawnItemEx("ZTPsychicBallGFX2",0,random(-6,6),random(-6,6),0,0,0,0,1)
BLKH E 1 A_JumpIfInTargetInventory("PsychicBallHold",1,1)
goto StopNow
BLKH E 0
loop

Crash:XDeath:Death:
TNT1 AAAAAAAA 0 A_SpawnItemEx("ZTPsychicBallGFX2",0,0,random(-20,20),random(6,12),0,random(-6,6),random(0,360),1)
TNT1 A 0 A_PlaySoundEx("weapon/blackholebombdetonate", "body", 1)
TNT1 A 0 A_GiveToTarget("ZenOrbGone", 1)
TNT1 A 0 A_Warp(AAPTR_Tracer,0,0,0,0,WARPF_NoCheckPosition|WARPF_COPYINTERPOLATION,"FlagCheck")
stop
FlagCheck:
TNT1 A 0 A_JumpIfInTargetInventory("ZenPowerFlag", 1, "ApplyWeak")
TNT1 A 0 A_JumpIfInTargetInventory("ZenSpeedFlag", 1, "ApplySlow")
TNT1 A 0 A_JumpIfInTargetInventory("ZenDefenseFlag", 1, "ApplyArmorBreak")
stop
ApplyWeak:
TNT1 A 0 A_GiveInventory("ZenGiveWeak", 1, AAPTR_TRACER)
stop
ApplySlow:
TNT1 A 0 A_GiveInventory("ZenGiveSlow", 1, AAPTR_TRACER)
stop
ApplyArmorBreak:
TNT1 A 0 A_GiveInventory("ZenGiveArmorBreak", 1, AAPTR_TRACER)
stop

StopNow:
BLKH BCDEBCDEBCDEBCDE 1 A_Stop
StopLoop:
BLKH B 0 A_SetScale(scalex, scaley - 0.15)
BLKH B 1 A_FadeOut(0.1) 
BLKH C 0 A_SetScale(scalex, scaley - 0.15)
BLKH C 1 A_FadeOut(0.1) 
BLKH D 0 A_SetScale(scalex, scaley - 0.15)
BLKH D 1 A_FadeOut(0.1) 
BLKH E 0 A_SetScale(scalex, scaley - 0.15)
BLKH E 1 A_FadeOut(0.1)
loop
}
}

actor FakeZTPsychicBallGFX : BasicClientside 
{
+FORCEXYBILLBOARD
scale 2.5
States
{
Spawn:
TNT1 A 0
BLKH B 1
stop
}
}

actor ZTPsychicBallGFX : BasicClientside {
+FORCEXYBILLBOARD
//Translation "192:192=228:228","198:198=229:229","0:0=167:167"
renderstyle add
scale 2.5
States
{
Spawn:
TNT1 A 0
BLKH B 2 A_SetScale(ScaleX + 0.235)
BLKH B 0 A_Fadeout
BLKH C 2 A_SetScale(ScaleX + 0.235)
BLKH C 0 A_Fadeout
BLKH D 2 A_SetScale(ScaleX + 0.235)
BLKH D 0 A_Fadeout
BLKH E 2 A_SetScale(ScaleX + 0.235)
BLKH E 0 A_Fadeout
loop
}
}

actor ZTPsychicBallGFX2 : BasicClientside {
+FORCEXYBILLBOARD
//Translation "192:192=228:228","198:198=229:229","0:0=167:167"
scale 4
Renderstyle translucent
Alpha 0.75
States
{
Spawn:
TNT1 A 0
BLKH TTTSSSRRR 1
stop
}
}

actor ZTPsychicBall_B : ZTPsychicBall {Translation "192:192=205:205","198:198=74:74","0:0=244:244"}
actor ZTPsychicBall_R : ZTPsychicBall {Translation "192:192=171:171","198:198=41:41","0:0=191:191"}
actor ZTPsychicBall_G : ZTPsychicBall {Translation "192:192=104:104","198:198=128:128","0:0=135:135"}
actor ZTPsychicBall_Y : ZTPsychicBall {Translation "192:192=229:229","198:198=232:232","0:0=234:234"}

actor ZTPsychicBall_M1 : BasicTeamColorPickup
{
states
{
FireX:
TNT1 A 0 A_FireCustomMissile("ZTPsychicBall",0,0,8)
goto Done
//---
FireB:
TNT1 A 0 A_FireCustomMissile("ZTPsychicBall_B",0,0,8)
goto Done
FireR:
TNT1 A 0 A_FireCustomMissile("ZTPsychicBall_R",0,0,8)
goto Done
FireG:
TNT1 A 0 A_FireCustomMissile("ZTPsychicBall_G",0,0,8)
goto Done
FireY:
TNT1 A 0 A_FireCustomMissile("ZTPsychicBall_Y",0,0,8)
goto Done
}
}


actor ZNAura_Attack : BasicClientside
{
Scale 2.65
States
{
Spawn:
TNT1 A 0
ZNAT A 2 
TNT1 A 0 A_Fadeout
loop
}
}

actor ZNAura_Heal : BasicClientside
{
Scale 2.65
States
{
Spawn:
TNT1 A 0
ZNHL A 2 
TNT1 A 0 A_Fadeout
loop
}
}

actor ZNAura_Haste : BasicClientside
{
Scale 2.65
States
{
Spawn:
TNT1 A 0
ZNHS A 2 
TNT1 A 0 A_Fadeout
loop
}
}

actor ZNAura_Defense : BasicClientside
{
Scale 2.65
States
{
Spawn:
TNT1 A 0
ZNDF A 2 
TNT1 A 0 A_Fadeout
loop
}
}
// ============ Powerup auras
actor Zen_Heal1 : Powerup{powerup.duration 2}
actor Zen_Heal2 : Powerup{powerup.duration 5}
actor Zen_Heal1PU : Powerup {powerup.duration 35}
actor Zen_Heal2PU : Powerup {powerup.duration 35}


actor Zen_Power150 : PowerDamage
{
powerup.duration 35
damagefactor "normal", 1.50
}

actor Zen_Power200 : PowerDamage
{
powerup.duration 35
damagefactor "normal", 2
}

actor Zen_Haste110 : Powerspeed
{
+POWERSPEED.NOTRAIL
powerup.duration 35
speed 1.15
}
actor Zen_Haste125 : Powerspeed
{
powerup.duration 35
speed 1.35
}



actor Zen_PowerDebuff : PowerDamage
{
powerup.duration 105
damagefactor "normal", 0.7
}

actor Zen_SlowDebuff : Powerspeed
{
+POWERSPEED.NOTRAIL
powerup.duration 105
speed 0.65
}

actor Zen_DefenseDebuff : PowerProtection
{
powerup.duration 105
damagefactor "normal", 1.5
}

Actor ZenPowerFlag : Inventory
{
Inventory.Amount 1
Inventory.MaxAmount 1
}

Actor ZenSpeedFlag : ZenPowerFlag {}

Actor ZenDefenseFlag : ZenPowerFlag {}

actor ZenChangeOrb : CustomInventory
{
Inventory.Amount 1
Inventory.MaxAmount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("ZenChangeOrbDelay", 1, "Nope")
TNT1 A 0 A_JumpIfInventory("ZenDefenseFlag", 1, "ZenPower")
TNT1 A 0 A_JumpIfInventory("ZenPowerFlag", 1, "ZenSpeed")
TTN1 A 0 A_JumpIfInventory("ZenSpeedFlag", 1, "ZenDefense")
stop
ZenPower:
TNT1 A 0 A_TakeInventory("ZenDefenseFlag", 1)
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_GiveInventory("ZenPowerFlag", 1)
Goto Finish
ZenSpeed:
TNT1 A 0 A_TakeInventory("ZenPowerFlag", 1)
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_GiveInventory("ZenSpeedFlag", 1)
Goto Finish
ZenDefense:
TNT1 A 0 A_TakeInventory("ZenSpeedFlag", 1)
TNT1 A 0 A_PlaySoundEx("misc/gravitywarn","SoundSlot5")
TNT1 A 0 A_GiveInventory("ZenDefenseFlag", 1)
Goto Finish
Finish:
TNT1 A 0 A_GiveInventory("ZenChangeOrbDelay", 1)
stop
Nope:
TNT1 A 0
stop
}
}

actor ZenChangeOrbDelay : Powerup {powerup.duration 35}

actor ZenOrbGone : Powerup {powerup.duration 5}

actor ZenGiveWeak : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0 A_JumpIfInventory("Zen_PowerDebuff", 1, 2)
TNT1 A 0 A_SpawnItemEx("ZenWeakWatcher")
TNT1 A 0 A_GiveInventory("Zen_PowerDebuff", 1)
stop
}
}
actor ZenWeakWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
States
{
Spawn:
TNT1 A 0 
TNT1 A 3 A_GiveToTarget("Zen_WeakFX", 1)
TNT1 A 0 A_JumpIfInTargetInventory("Zen_PowerDebuff", 1, "Spawn")
stop
}
}

actor Zen_WeakFX : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("ZNAura_Attack", random(16, 48), 0, Random(16,48), 0, 0, Random(-1, -3), random(0, 359), SXF_TRANSFERTRANSLATION)
stop
}
}

//----
actor ZenGiveSlow : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0 A_JumpIfInventory("Zen_SlowDebuff", 1, 2)
TNT1 A 0 A_SpawnItemEx("ZenSlowWatcher")
TNT1 A 0 A_GiveInventory("Zen_SlowDebuff", 1)
stop
}
}
actor ZenSlowWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
States
{
Spawn:
TNT1 A 0 
TNT1 A 3 A_GiveToTarget("Zen_SlowFX", 1)
TNT1 A 0 A_JumpIfInTargetInventory("Zen_SlowDebuff", 1, "Spawn")
stop
}
}

actor Zen_SlowFX : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("ZNAura_Haste", random(16, 48), 0, Random(16,48), 0, 0, Random(-1, -3), random(0, 359), SXF_TRANSFERTRANSLATION)
stop
}
}

//----
actor ZenGiveArmorBreak : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0 A_JumpIfInventory("Zen_DefenseDebuff", 1, 2)
TNT1 A 0 A_SpawnItemEx("ZenArmorBreakWatcher")
TNT1 A 0 A_GiveInventory("Zen_DefenseDebuff", 1)
stop
}
}
actor ZenArmorBreakWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
States
{
Spawn:
TNT1 A 0 
TNT1 A 3 A_GiveToTarget("Zen_ArmorBreakFX", 1)
TNT1 A 0 A_JumpIfInTargetInventory("Zen_DefenseDebuff", 1, "Spawn")
stop
}
}

actor Zen_ArmorBreakFX : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("ZNAura_Defense", random(16, 48), 0, Random(16,48), 0, 0, Random(-1, -3), random(0, 359), SXF_TRANSFERTRANSLATION)
stop
}
}

//FX
actor PsychicBallFXSpawner
{
+NOINTERACTION
+NOGRAVITY
+CLIENTSIDEONLY
-SOLID
height 1
radius 1
reactiontime 18
States
{
	Spawn:
		TNT1 A 0
		TNT1 AAAAA 1 A_SpawnItemEx("PsychicBallFX", 128, 0, 0, 0, 0, 0, random(0, 359), SXF_TRANSFERTRANSLATION)
		TNT1 A 1 A_JumpIfInventory("PsychicBallHold", 1, "Spawn", AAPTR_TARGET)
		Goto Death
	Death:
		TNT1 A 0
		stop
}
}

actor PsychicBallFX
{
+NOINTERACTION
+NOGRAVITY
+CLIENTSIDEONLY
+FORCEXYBILLBOARD
Renderstyle "Translucent"
Alpha 0.5
-SOLID
scale 2.5
height 0
radius 0
States
{
Spawn:
BLKH TS 3
BLKH S 0 A_ChangeVelocity(-16, 0, 0, CVF_RELATIVE|CVF_REPLACE)
BLKH RRRRRRRRRRRR 1 A_SpawnItemEx("PsychicBallFX2",0,0,0,momx/1.5,momy/1.5,0,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
stop
}
}

actor PsychicBallFX2 : PsychicBallFX
{
States
{
Spawn:
BLKH R 2
stop
}
}