Const int Assize_Radius = 200;
Const int Assize_Damage = 15;
Const int Assize_HealItem = 14;


actor AssizeBlast : BasicExplosion
{
Scale 5.0
ReactionTime 30
DamageType "Assize"
Obituary "$OB_ASSIZE"
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_PlaySoundEx("weapon/Napalm","Weapon")
TNT1 A 0 A_Explode(Assize_Damage,Assize_Radius,0,0,Assize_Radius)
TNT1 A 0 ACS_NamedExecuteAlways("CSACS_RadiusGive",0,Assize_HealItem,Assize_Radius,1)
TNT1 A 1 A_Spawnitemex("HolyChargeShotBlastFX",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_Spawnitemex("AssizeWaveFX",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION)
Spawn2:
TNT1 A 1
TNT1 AAA 0 A_SpawnItemEx("HolyChargeShotBlastFX2",Assize_Radius,0,random(-Assize_Radius,Assize_Radius),0,0,0,random(0,360),SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_CountDown
loop

Death:
TNT1 A 1
Stop
}
}

actor AssizeWaveFX : GravityHoldFX
{
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_SetUserVar("user_angle", random(0, 6))
SpawnLoop:
TNT1 A 0 A_SpawnItemEx("AssizeSWPTM", Assize_Radius, 0, 0, 2, 0, 0, user_angle, SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", user_angle + 6)
TNT1 A 0 A_Countdown
loop
}
}

Actor AssizeSWPTM : LightningStartFX1
{
Translation "0:255=204:204"
renderstyle "Add"
-NOINTERACTION
+CLIENTSIDEONLY
States
{
Spawn:
TNT1 A 0
DUOR T 1 A_FadeOut(0.1)
Wait
}
}

actor AssizeShot : BasicFastProjectile
{
PROJECTILE
-MTHRUSPECIES
MissileHeight 8
Speed 75
Damage (30)
radius 10
height 15
ReactionTime 6
DamageType "Assize"
Obituary "$OB_ASSIZE"
scale 2.5
States
{
Spawn:
TNT1 A 0 
WCUB ABCD 3 A_SpawnItemEx("MedicaSparkleFX", random(-8,8), random(-8,8), random(-8,8), 0, 0, 0, 0,1)
Goto Spawn

Crash:
TNT1 A 0 A_ChangeFlag("NOINTERACTION",True)
TNT1 A 0 A_PlaySoundEx("weapon/AssizeHit","Weapon")
TNT1 A 0 A_Spawnitemex("MedicaAOE",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPOINTERS)
TNT1 A 0 A_Spawnitemex("AssizeHitFX_1",0,0,0,-10,0,random(5,15),random(-15,15),SXF_TRANSFERTRANSLATION)
MMFX A 5 A_Stop
stop

Death:
TNT1 A 0 A_Spawnitemex("AssizeHitFX_1",0,0,0,-10,0,random(5,15),random(-15,15),SXF_TRANSFERTRANSLATION)
MMFX A 5 A_Stop
stop
}
}
	actor AssizeShot_SOLO : AssizeShot
	{translation "250:250=4:4", "192:192=201:201", "198:198=206:206", "249:249=175:175", "195:195=244:244"}	

	actor AssizeShot_BLUE : AssizeShot
	{translation "250:250=196:196", "192:192=205:205", "198:198=74:74", "249:249=199:199", "195:195=244:244"}

	actor AssizeShot_RED : AssizeShot
	{translation "250:250=170:170", "192:192=171:171", "198:198=41:41", "249:249=45:45", "195:195=191:191"}
	
	actor AssizeShot_GREEN : AssizeShot
	{translation "250:250=138:138", "192:192=104:104", "198:198=128:128", "249:249=131:131", "195:195=135:135"}
	
	actor AssizeShot_YELLOW : AssizeShot
	{translation "250:250=214:214", "192:192=229:229", "198:198=232:232", "249:249=223:223", "195:195=234:234"}

actor AssizePrefireFX : BasicClientside
{
+MISSILE
+NOTARGETSWITCH
Scale 2.5
Renderstyle "Translucent"
Alpha 0.1
var int user_XCor;
var int user_YCor;
var int user_ZCor;
var int user_Rads;
var int user_SMTH;
var int user_SAdd;
var int user_Timer;

var int user_Frame;
States
{
Spawn:
DUST C 0
DUST C 0 A_SetUserVar("user_ZCor",WhiteCubeZ)
DUST C 0 A_SetUserVar("user_SMTH",0)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))

WCUB A 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB A 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB A 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB A 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB B 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB B 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB B 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB B 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))

WCUB C 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB C 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB C 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB C 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))

WCUB D 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB D 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB D 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
WCUB D 0 A_FadeTo(0.8,0.3)
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB D 0 A_SetTranslucent(1.0,0)

WCUB A 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
WCUB A 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))

WCUB B 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 B 0 A_SetPitch(CallACS("PitchGrab"))
WCUB B 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 B 0 A_SetPitch(CallACS("PitchGrab"))

WCUB C 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 C 0 A_SetPitch(CallACS("PitchGrab"))
WCUB C 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 C 0 A_SetPitch(CallACS("PitchGrab"))

WCUB D 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 D 0 A_SetPitch(CallACS("PitchGrab"))
WCUB D 1 A_Warp(AAPTR_TARGET,70*cos(user_SMTH),70*sin(user_SMTH),user_ZCor+(sin(Pitch)*-85))
TNT1 D 0 A_SetPitch(CallACS("PitchGrab"))
stop

Terminate:
Expire:
Death:
TNT1 A 1 
TNT1 A 0
stop

}
}

actor AssizeHitFX_1 : BasicNOTClientside
{
-NOINTERACTION
-NOGRAVITY
+THRUACTORS
+DOOMBOUNCE
+MBFBOUNCER
-ALLOWBOUNCEONACTORS
-BOUNCEONACTORS
Reactiontime 70
scale 2.5
SeeSound "Weapon/OrbBounce"
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 ThrustThingZ(0,30,0,0)
WCUB IJKL 3 
WCUB IJKL 3 
WCUB IJKL 3 
WCUB IZIZJKZKLZL 1
WCUB IZIZJKZKLZL 1
stop

Death:
TNT1 A 1 
stop
}
}

actor AssizeMPGive : BasicPassActor
{
States
{
GiveItem:
TNT1 A 0 A_GiveInventory("WhiteMageMana",20,AAPTR_TRACER)
TNT1 A 5
stop
}
}

//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor AssizeCooler : BasicHelper
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("AssizeCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("AssizeCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor AssizeCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("AssizeCooldownItem",70)
TNT1 A 0 A_Spawnitemex("AssizeCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor AssizeCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 175 //5 sec
}

//[+]========================================================================[+]
//--------------------------------|Item Shooters|------------------------------
//[+]========================================================================[+]

actor AssizeShotShooter : BasicTeamColorPickup
{
states
{
FireX:
BUST B 1 A_FireCustomMissile("AssizeShot_SOLO",0,1,4,8,0,0)
goto Done
//---
FireB:
BUST B 1 A_FireCustomMissile("AssizeShot_BLUE",0,1,4,8,0,0)
goto Done
FireR:
BUST B 1 A_FireCustomMissile("AssizeShot_RED",0,1,4,8,0,0)
goto Done
FireG:
TNT1 A 0 A_FireCustomMissile("AssizeShot_GREEN",0,0,0,0)
goto Done
FireY:
TNT1 A 0 A_FireCustomMissile("AssizeShot_YELLOW",0,0,0,0)
goto Done
}
}