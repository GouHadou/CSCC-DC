actor IceSparky : ClassBaseCSCC
{
player.displayname "Ice/Sparky"
player.soundclass "megaman"
player.forwardmove 0.6, 0.6
player.sidemove 0.78, 0.78
player.startitem "IceWep"
player.startitem "SparkyWep"
player.startitem "IceSparkyClassItems"
damagefactor "Instagib", 5.0
damagefactor "Normal", 1.5
damagefactor "Dummy", 0.0
var int user_Health;
var int user_HealthDif;
States
{
Spawn:
ICSP A 0
ICSP B 1
ICSP A 1 A_SetUserVar("user_Health", health)
Goto Spawn+2
See:
ICSP BCDE 5 A_SetUserVar("user_Health", health)
Goto Spawn
Missile:
ICSP F 5 A_SetUserVar("user_Health", health)
ICSP G 4
goto Spawn+2
ClassPain:
ICSP H 0 A_JumpIfInventory("IceSparkyCombine", 1, "PainContinue")
ICSP H 0 A_JumpIfInventory("IceSparkyFusion", 1, "PainContinue")
//ICSP H 0 A_JumpIfInventory("FusionMeter", 250, "GiveFusion")
ICSP H 0 A_JumpIf(health < user_Health, "GiveMeter1")
goto "Super::MegamanPain"

GiveMeter1:
ICSP H 0 A_SetUserVar("user_HealthDif", user_Health - health)
ICSP H 0 A_JumpIfInventory("FusionStock", 4, "Meter3")
ICSP H 0 A_JumpIfInventory("FusionStock", 3, "Meter2")
ICSP H 0 A_JumpIfInventory("FusionStock", 2, "Meter1")
Goto GiveMeter2
Meter1:
ICSP H 0 A_SetUserVar("user_HealthDif", user_HealthDif * 2)
Goto GiveMeter2
Meter2:
ICSP H 0 A_SetUserVar("user_HealthDif", user_HealthDif * 3)
Goto GiveMeter2
Meter3:
ICSP H 0 A_SetUserVar("user_HealthDif", user_HealthDif * 4)
Goto GiveMeter2
GiveMeter2:
ICSP H 0 A_GiveInventory(FusionMeter, user_HealthDif)
ICSP H 0 A_SetUserVar("user_Health", health)
ICSP H 0 A_JumpIfInventory("FusionMeter", 250, "GiveFusion")
goto "Super::MegamanPain"
PainContinue:
ICSP H 0 
goto "Super::MegamanPain"
GiveFusion:
ICSP H 0 A_TakeInventory("FusionMeter", 999)
ICSP H 0 A_JumpIfInventory("IsBot", 1, "FusionBot")
ICSP H 0 A_PlaySoundEx("weapon/lightningbolt", "Body")
ICSP H 0 A_GiveInventory("IceSparkyCombine", 1)
goto "Super::MegamanPain"
FusionBot:
ICSP H 0 A_GiveInventory("IceSparkyFusion", 1)
goto "Super::MegamanPain"

ClassDeath:
ICEH H 0 A_JumpIfInventory("IsIceSparky", 1, "Split")
ICSP H 0
MegamanDeath:
ICEH H 0 A_JumpIfInventory("IsIceSparky", 1, "Split")
"----" A 0 A_JumpIfInventory("ExplodeDeathFlag",1,"MegamanExplode")
"----" A 0 A_JumpIfInventory("FallingDeathFlag",1,"MegamanFall")
"----" A 0 A_JumpIfInventory("RisingDeathFlag",1,"MegamanRise")
"----" A 0 A_JumpIfInventory("IceDeathFlag",1,"MegamanIce")
goto "Super::MegamanDeath"

Split:
ICSP H 0// A_GiveInventory("ClassDeathPickup",1)
ICSP H 19 ACS_ExecuteAlways(999,0,0)
MMFX B 0 A_SpawnItemEx("IceSplit",5,0,0,-15,0,15,270)
MMFX B 0 A_SpawnItemEx("SparkySplit",5,0,0,-15,0,15,90)
goto MegamanExplode
Death.Backstab:
ICSP H 0 SetPlayerProperty(0, 0, 4)
ICSP H 0 A_TakeInventory("PharaohCharge",999)   
ICSP H 0 A_NoBlocking
ICSP H 0 A_GiveInventory("CutterFlag",999)
ICSP H 0 A_GiveInventory("IsDead",1)
ICSP H 0 A_Stop
ICSP H 0 A_GiveToTarget("KilledMeStock",1)
ICSP H 1 A_GiveToTarget("KilledMe",1)
ICSP H 1 A_GiveToTarget("ClearDisguise",1)
ICSP H 0 A_GiveToTarget("DisguiseOn",1)
ICSP H 0 A_GiveToTarget("IceDisguise",1)
ICSP H 0 ACS_ExecuteAlways(775,0,360)
goto BackstabFrames
}
}

actor IceSplit
{
Translation "192:192=196:196", "198:198=95:95" 
PROJECTILE
-NOGRAVITY
+SKYEXPLODE
Radius 10
Height 10
scale 2.5
speed 32
States
{
Spawn:
ICSP I 4
loop
Death:
MMFX B 0 A_PlaySound("misc/devildeath")
PLAY H 0 A_SpawnItemEx("FakeDeathFX2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION)
stop
}
}

actor SparkySplit
{
Translation "192:192=228:228", "198:198=95:95" 
PROJECTILE
-NOGRAVITY
+SKYEXPLODE
Radius 10
Height 10
scale 2.5
speed 32
States
{
Spawn:
ICSP I 4
loop
Death:
MMFX B 0 A_PlaySound("misc/devildeath")
PLAY H 0 A_SpawnItemEx("FakeDeathFX2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION)
stop
}
}

actor IceTeleport
{
Radius 12
Height 32
scale 2.5
+NOCLIP
PROJECTILE
+DONTBLAST
Translation "198:198=95:95", "192:192=196:196"
states
{
Spawn:
WRPS A 0 
WRPS A 7
WRPS A 0 A_ChangeFlag("NOCLIP", 0)
WRPS AA 1 A_CheckFloor("Death")
death:
WRPS B 0 A_Stop
WRPS B 2 A_PlaySoundEx("weapon/Blip","Weapon")
WRPS C 2
stop
}
}

actor SparkyTeleport
{
Radius 12
Height 32
scale 2.5
+NOCLIP
PROJECTILE
+DONTBLAST
Translation "198:198=95:95", "192:192=228:228"
states
{
Spawn:
WRPS A 0
WRPS A 7
WRPS A 0 A_Changeflag("NOCLIP", 0)
WRPS AA 1 A_CheckFloor("Death")
death:
WRPS B 0 A_Stop
WRPS B 2 A_PlaySoundEx("weapon/Blip","Body")
WRPS C 2
stop
}
}

actor IceLeave : IceTeleport
{
+NOINTERACTION
states
{
Spawn:
WRPS C 2 A_PlaySoundEx("weapon/Warp","Body")
WRPS B 2
WRPS A 0 A_ChangeVelocity(0, 0, 32, CVF_REPLACE)
WRPS A 7
WRPS A 0 
stop
}
}

actor SparkyLeave : SparkyTeleport
{
+NOINTERACTION
states
{
Spawn:
WRPS C 2 A_PlaySoundEx("weapon/Warp","Weapon")
WRPS B 2
WRPS A 0 A_ChangeVelocity(0, 0, 32, CVF_REPLACE)
WRPS A 7
WRPS A 0 
stop
}
}


actor IceWepMorph : IceSparky
{
+NOSKIN
player.morphweapon "IceWep"
player.soundclass "BestClassEver"
States
{
Pain:
YOKM H 0 A_ScaleVelocity(0.75)
YOKM H 0 
Goto "ClassBaseCSCC::Pain+2"
}
}

//Sparky Morph Actors

actor SparkyWepMorph : IceSparky
{
+NOSKIN
player.morphweapon "SparkyWep"
player.soundclass "BestClassEver"
States
{
Pain:
YOKM H 0 A_ScaleVelocity(0.75)
YOKM H 0 
Goto "ClassBaseCSCC::Pain+2"
}
}

actor FusionMeter : Inventory
{
Inventory.Amount 1
Inventory.MaxAmount 250
}

actor FusionStock : Inventory
{
Inventory.Amount 1
Inventory.MaxAmount 4
}


actor IsSparky : Once {}
actor IsIce : Once {}
actor IsIceSparky : Once{}
actor TeleFlag : Once{}


actor IceSparkyClassItems : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_GiveInventory("IceClassAmmo", 28)
TNT1 A 0 A_GiveInventory("SparkyClassAmmo", 28)
TNT1 A 0 A_GiveInventory("FusionStock", 1)
stop
}
}
//Ice for Copy
actor IceSparkyClassItems1 : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_GiveInventory("IceSparkyClassItems", 1)
TNT1 A 0 A_GiveInventory("DocToadHealthBar",1)
TNT1 A 0 A_GiveInventory("IsIce", 1)
TNT1 A 0 A_GiveInventory("IceArmor",1)
TNT1 A 0 ACS_ExecuteAlways(CSACS_ICESPARKSWAP,0,0)
stop
}
}

//Sparky for Copy
actor IceSparkyClassItems2 : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_GiveInventory("IceSparkyClassItems", 1)
TNT1 A 0 A_GiveInventory("IsSparky", 1)
TNT1 A 0 A_GiveInventory("GlassHealthBar",1)
TNT1 A 0 ACS_ExecuteAlways(CSACS_ICESPARKSWAP,0,1)
stop
}
}