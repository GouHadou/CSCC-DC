actor IsRin : Once {}
actor IAmRin : Once {}

Actor RinPhaseDash : Inventory{}
Actor RinCheckPhase : Inventory{}

Actor RinPhaseDash1 : Inventory{}
actor RinPhaseDash2 : powerup {Inventory.amount 1 powerup.duration 50}

Actor RinDashAnim : Inventory{}
Actor RinKneeAnim : Inventory{}

Actor RinPunchAnim : Inventory{}

Actor RinUpperChargeAnim : Inventory{}
Actor RinUppercutAnim : Inventory{}

Actor DemonRinAnim : Inventory{}
Actor DemonRinDashAnim : Inventory{}

Actor RinClass : ClassBaseCSCC
{
Health 100
Player.MaxHealth 100
Player.DisplayName "Rin"
Player.SoundClass "RinSound"
Player.DamageScreenColor "Red"
Player.ForwardMove 0.9, 0.9
Player.SideMove 0.92, 0.92
Player.JumpZ 12
Player.StartItem "RinClassItems"
States
{
Spawn: 
RNFG A 0
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG A 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG A 1 A_JumpIf(z-floorz>0, "Jump")
GoTo Spawn+2

See:
RNFG B 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG B 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG B 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG B 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG B 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG B 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG D 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG D 1 A_JumpIf(z-floorz>0, "Jump")
RNFG D 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG D 1 A_JumpIf(z-floorz>0, "Jump")
RNFG D 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG D 1 A_JumpIf(z-floorz>0, "Jump")
RNFG D 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG D 1 A_JumpIf(z-floorz>0, "Jump")
RNFG D 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG D 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG C 1 A_JumpIf(z-floorz>0, "Jump")
RNFG C 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
GoTo Spawn+1

Missile:
RNFG F 0 A_JumpIfInventory("DemonRinDashAnim",1,"DemonRinDash")
RNFG F 0 A_JumpIfInventory("DemonRinEnergy",1,"DemonRinAttack")
RNFG F 0 A_JumpIfInventory("RinUpperChargeAnim",1,"UpperCharge")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG F 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG F 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG G 1 A_JumpIfInventory("RinDashAnim",1,"RinDash")
RNFG G 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
GoTo Spawn+2

Jump:
RNFG E 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRin")
RNFG E 1 A_JumpIf(z-floorz<=0, "Spawn")
loop
RinDash:
RNFG BBCCDDCCBBCCDDCC 1 A_JumpIfInventory("RinKneeAnim",1,"RinKnee")
goto Spawn+2
RinKnee:
RNFG E 11
goto Spawn+2

UpperCharge:
RNFG F 0 A_JumpIfInventory("RinPunchAnim",1,"Punch")
RNFG F 1 A_JumpIfInventory("RinUppercutAnim",1,"Uppercut")
RNFG F 0 A_JumpIfInventory("RinPunchAnim",1,"Punch")
RNFG F 0 A_JumpIfInventory("RinUpperChargeAnim",1,"UpperCharge")
goto Spawn+2
Uppercut:
RNFG I 1
RNFG I 0 A_JumpIfInventory("RinUppercutAnim",1,"Uppercut")
goto Spawn+2
Punch:
RNFG G 1
RNFG G 0 A_JumpIfInventory("RinPunchAnim",1,"Punch")
goto Spawn+2

DemonRin:
RNFG JKLMNO 1
DemonRinIdle:
RNFG P 1
RNFG P 0 A_JumpIfInventory("DemonRinAnim",1,"DemonRinIdle")
goto Spawn+2
DemonRinAttack:
RNFG QQQQQRRRR 1
goto DemonRinIdle
DemonRinDash:
RNFG S 1
RNFG S 0 A_JumpIfInventory("DemonRinDashAnim",1,"DemonRinDash")
goto DemonRinIdle

ClassDeath:
RNFG H 0 SetPlayerProperty(0, 0, 4)
RNFG H 0 A_TakeInventory("WeaponCharge",999)
RNFG H 0 ACS_NamedTerminate("LightSBarHandler",0)
RNFG H 0 A_NoBlocking
RNFG H 0 A_GiveInventory("CutterFlag",999)
RNFG H 0 A_GiveInventory("IsDead",1)
RNFG H 0 A_Stop
RNFG H 0 A_GiveToTarget("KilledMeStock",1)
RNFG H 1 A_GiveToTarget("KilledMe",1)
RNFG H 1 ACS_ExecuteAlways(999,0,0)
RNFG HHHHHHHHHH 0 //A_SpawnItemEx("CoinDecider",0,0,0)
RNFG HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 0 //A_DropInventory("CoinItem")
RNFG H 0 //ACS_NamedExecuteWithResult("MC_CoinScript")
RNFG H 0 A_Jump(256,"OffTheAir") //This is because I plan to make a normal death state for her, for now take this joke one
goto OffTheAir
OffTheAir:
TNT1 A 0 A_PlaySoundEx("offtheair","Voice")
TOTA VVVVVVVVVVVVVVVVVVVV 1 A_Stop
RNFG T 0 A_SpawnItemEx("RinSkirt",0,0,0,random(-15,15),random(-15,15),random(5,25),random(-256,256),SXF_TRANSFERTRANSLATION)
RNFG T 0 A_SpawnItemEx("RinGlove1",0,0,0,random(-15,15),random(-15,15),random(5,25),random(-256,256),SXF_TRANSFERTRANSLATION)
RNFG T 0 A_SpawnItemEx("RinGlove2",0,0,0,random(-15,15),random(-15,15),random(5,25),random(-256,256),SXF_TRANSFERTRANSLATION)
RNFG T 0 A_SpawnItemEx("RinShoe1",0,0,0,random(-15,15),random(-15,15),random(5,25),random(-256,256),SXF_TRANSFERTRANSLATION)
RNFG T 0 A_SpawnItemEx("RinShoe2",0,0,0,random(-15,15),random(-15,15),random(5,25),random(-256,256),SXF_TRANSFERTRANSLATION)
RNFG T 0 A_PlaySoundEx("dbz/kiexplode","Voice")
RNFG T 1 A_SetTranslucent(0.90, 0)
RNFG T 1 A_SetTranslucent(0.80, 0)
RNFG T 1 A_SetTranslucent(0.70, 0)
RNFG T 1 A_SetTranslucent(0.60, 0)
RNFG T 1 A_SetTranslucent(0.50, 0)
RNFG T 1 A_SetTranslucent(0.40, 0)
RNFG T 1 A_SetTranslucent(0.30, 0)
RNFG T 1 A_SetTranslucent(0.20, 0)
RNFG T 1 A_SetTranslucent(0.10, 0)
RNFG Z 1 ACS_ExecuteAlways(999,0,0)
GoTo MegamanErase
}
}

Actor RinJumpFX : LightningStartFX1
{
+CLIENTSIDEONLY
Alpha 0.6
RenderStyle Translucent
States
{
Spawn:
TNT1 A 0
RNJP ABCD 2
Stop
}
}

Actor RinGravityAdjust : CustomInventory
{
+INVENTORY.AUTOACTIVATE
States
{
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("IsUnderWater",1,"Gravity2")
GoTo Gravity1
Gravity1:
TNT1 A 0 A_SetGravity(0.8)
Stop
Gravity2:
TNT1 A 0 A_SetGravity(0.25)
Stop
}
}

actor RinSkirt
{
-NOGRAVITY
-SOLID
+CLIENTSIDEONLY
+NOBLOCKMAP
+DONTSPLASH
height 4
radius 4
scale 2.5
States
{
Spawn:
TNT1 A 0
RNCL A 1 A_CheckFloor("Spawn2")
loop
Spawn2:
TNT1 A 0 A_PlaySoundEx("dbz/groundrecover","SoundSlot6")
TNT1 A 0 A_ChangeFlag("FLOORHUGGER",1)
RNCL A 250
goto Spawn3
Spawn3:
MMFX BBBCCCDDDEEE 1 A_Fadeout
stop
}
}

actor RinGlove1 : RinSkirt
{
States
{
Spawn:
TNT1 A 0
RNCL B 1 A_CheckFloor("Spawn2")
loop
Spawn2:
TNT1 A 0 A_PlaySoundEx("dbz/groundrecover","SoundSlot6")
TNT1 A 0 A_ChangeFlag("FLOORHUGGER",1)
RNCL B 250
goto Spawn3
}
}

actor RinGlove2 : RinSkirt
{
States
{
Spawn:
TNT1 A 0
RNCL C 1 A_CheckFloor("Spawn2")
loop
Spawn2:
TNT1 A 0 A_PlaySoundEx("dbz/groundrecover","SoundSlot6")
TNT1 A 0 A_ChangeFlag("FLOORHUGGER",1)
RNCL C 250
goto Spawn3
}
}

actor RinShoe1 : RinSkirt
{
States
{
Spawn:
TNT1 A 0
RNCL D 1 A_CheckFloor("Spawn2")
loop
Spawn2:
TNT1 A 0 A_PlaySoundEx("dbz/groundrecover","SoundSlot6")
TNT1 A 0 A_ChangeFlag("FLOORHUGGER",1)
RNCL D 250
goto Spawn3
}
}

actor RinShoe2 : RinSkirt
{
States
{
Spawn:
TNT1 A 0
RNCL E 1 A_CheckFloor("Spawn2")
loop
Spawn2:
TNT1 A 0 A_PlaySoundEx("dbz/groundrecover","SoundSlot6")
TNT1 A 0 A_ChangeFlag("FLOORHUGGER",1)
RNCL E 250
goto Spawn3
}
}

actor RinClassItems : CustomInventory
{
inventory.amount 1
inventory.maxamount 1
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_GiveInventory("NoIcons")
TNT1 A 0 A_GiveInventory("NoHealthBar2")
TNT1 A 0 A_GiveInventory("NoUltBar")
TNT1 A 0 A_GiveInventory("CanUseItems")
TNT1 A 0 A_GiveInventory("IAmRin")
TNT1 A 0 A_GiveInventory("HealthManager")
TNT1 A 0 A_GiveInventory("CanWallJump")
TNT1 A 0 A_GiveInventory("StaminaFlag", 500)
TNT1 A 0 A_GiveInventory("RinGougi1")
TNT1 A 0 A_GiveInventory("RinGougi2")
stop
}
}