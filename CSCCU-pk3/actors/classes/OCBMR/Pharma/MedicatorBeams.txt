//[+]========================================================================[+]
//--------------------------------|HealBeam |--------------------------------
//[+]========================================================================[+]


actor HealBeam
{
PROJECTILE
+DONTBLAST
//+LOOKALLAROUND
+SEEKERMISSILE
+NOCLIP
+NOINTERACTION
Renderstyle "Translucent"
Alpha 0.95
radius 8
height 8
Damage (0)
Meleerange 100
speed 10
floatspeed 28
scale 3.0
Reactiontime 35
States
{
Spawn:
LASH A 0
LASH A 0
LASH A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_TARGET, AAPTR_DEFAULT) //make the shooter our master
LASH A 0 A_TransferPointer(AAPTR_MASTER,AAPTR_DEFAULT,AAPTR_TRACER,AAPTR_TRACER) //Set the Bullet's tracer to the Shooter's, if they have one.
LASH A 0 A_JumpifTracercloser(630,"Targetspotted") //immediately got a tracer, let's aim for them!

TNT1 A 0 //A_JumpifinTargetInventory("BeamFXBuffer",1,3)
TNT1 A 0 A_SpawnItemEx("HealFX2",30,random(-5,5),random(-5,5),momx/4,momy/4,1,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
TNT1 A 0 //A_GiveToTarget("BeamFXBuffer",1)
TNT1 A 0
stop

Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("HealBeamFX",0,0,0,0)
Goto AfterSpot
AfterSpot:
LASH A 0 A_RearrangePointers(AAPTR_MASTER, AAPTR_DEFAULT, AAPTR_TARGET) //make the target our tracer
LASH A 0 A_TransferPointer(AAPTR_DEFAULT,AAPTR_MASTER,AAPTR_TRACER,AAPTR_TRACER) //Set the shooter's tracer to the bullet's
LASH A 0 A_Jump(256,"GiveHealth")
goto GiveHealth
Death:
TNT1 A 0
stop
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("HealBeamHeal",1)
TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
TNT1 A 0 A_GiveInventory("PillChargeDrain",1,AAPTR_MASTER)
stop
Detatch: //clear the tracer from the healer's pointer
TNT1 A 0 //A_GiveInventory("TracerEraser",1,AAPTR_MASTER)
stop
}
}

actor HealBeamHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Jumpifinventory("HealDelay",1,"Nope")
//TNT1 A 0 A_jumpifinventory("BurnMark",1,"Weak")
TNT1 A 0 A_JumpIf(CallACS("HealthPercent",0)>=100,"OverHeal")
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)

TNT1 A 0// A_jumpifinventory("HealStall_B",1,"WeakHeal")
TNT1 A 0// A_jumpifinventory("HealStall_A",1,"MidHeal")
TNT1 A 0 HealThing(5)
Goto Postheal

WeakHeal:
TNT1 A 0 HealThing(2)
Goto Postheal

MidHeal:
TNT1 A 0 HealThing(3)
Goto Postheal

PostHeal:
TNT1 A 1// A_Giveinventory("IveBeenHealed")
TNT1 A 0 A_PlaySoundEx("item/energyup","Weapon")
TNT1 A 0
stop

Overheal:
TNT1 A 0 A_JumpIf(CallACS("HealthPercent",0)>=150,"Nope") //over 150% health? no more overheal
TNT1 A 0 //A_jumpifinventory("HealStall_B",1,"WeakOverHeal")
TNT1 A 0 //A_jumpifinventory("HealStall_A",1,"MidOverHeal")
TNT1 A 1 A_Giveinventory("OverHealHealth",5)
Goto PostOverheal

WeakOverHeal:
TNT1 A 1 A_Giveinventory("OverHealHealth",2)
Goto PostOverheal

MidOverHeal:
TNT1 A 1 A_Giveinventory("OverHealHealth",3)
Goto PostOverheal

PostOverHeal:
TNT1 A 1// A_Giveinventory("IveBeenHealed")
TNT1 A 0 A_Jumpifinventory("OverhealValue",1,2)
TNT1 A 0 A_Spawnitemex("OverHealWatcher")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)
TNT1 A 1 A_Giveinventory("HealDelay")
	TNT1 A 0
TNT1 A 0
stop

Nope:
TNT1 A 0
stop
}
}

actor LightHealBeamHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Jumpifinventory("HealDelay",1,"Nope")
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)

TNT1 A 0 HealThing(2)
TNT1 A 1 //A_Giveinventory("IveBeenHealed")
TNT1 A 0 A_PlaySoundEx("item/energyup","Weapon")
TNT1 A 0
stop

Nope:
TNT1 A 0
stop
}
}


actor LightHealBeamOverHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Jumpifinventory("HealDelay",1,"Nope")
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)

TNT1 A 1 A_Giveinventory("OverHealHealth",2)
TNT1 A 1// A_Giveinventory("IveBeenHealed")
TNT1 A 0 A_PlaySoundEx("item/energyup","Weapon")
TNT1 A 0
stop

Nope:
TNT1 A 0
stop
}
}

//Beams are colored by type, so no team coloring with heal beams.

actor HealBeamFX
{
Translation "192:192=160:160" , "198:198=228:228"
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("HealBeamFX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}




//[+]==============================================[+]
actor BeamGraphic 
{
PROJECTILE
+NOINTERACTION
+NOCLIP
+CLIENTSIDEONLY
radius 8
height 8
Damage (0)
scale 3.0
Reactiontime 35
Renderstyle "Add"
Alpha 1.0
States
{
Spawn:
TNT1 A 0
BASB UUU 1
stop
}
}

actor HealFX
{
PROJECTILE
+NOINTERACTION
+NOCLIP
+CLIENTSIDEONLY
radius 8
height 8
Damage (0)
scale 3.0
Reactiontime 35
Renderstyle "ADD"
Alpha 0.8
States
{
Spawn:
HEAL A 0
HEAL A 15
HEAL AAAABBBCC 1 
stop
}
}

actor HealFX2
{
PROJECTILE
+NOINTERACTION
+NOCLIP
+CLIENTSIDEONLY
radius 8
height 8
Damage (0)
scale 1.5
Reactiontime 35
Renderstyle "ADD"
Alpha 1
States
{
Spawn:
HEAL A 0
HEAL A 10
HEAL AAAABBBCC 1 
stop
}
}


actor HealFX3
{
PROJECTILE
+NOINTERACTION
+NOCLIP
+CLIENTSIDEONLY
radius 8
height 8
Damage (0)
scale 1.5
Reactiontime 35
Renderstyle "ADD"
Alpha 1
States
{
Spawn:
HEAL A 0
HEAL A 20
HEAL ABABABCCC 1 
stop
}
}

actor HealFX4
{
PROJECTILE
+NOINTERACTION
+NOCLIP
+CLIENTSIDEONLY
radius 8
height 8
Damage (0)
scale 0.5
Reactiontime 35
Renderstyle "ADD"
Alpha 1
States
{
Spawn:
HEAL A 0
HEAL A 3
HEAL AAAABBBCC 1 
stop
}
}

actor HealEffectSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("HealFX2",30,0,random(0,50),momx/4,momy/4,1,random(0,360),SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
TNT1 A 0
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}


Actor HealEffectWatcher 
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 7
Obituary "%0 succumed to poison"
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_GiveToTarget("HealEffectSpawn",1)
TNT1 A 4
TNT1 A 0 A_Countdown
loop
Death:
TNT1 A 0
stop
}
}

//[+]========================================================================[+]
//----------------------------|Pill Charges|--------------------------------
//[+]========================================================================[+]

ACTOR PillCharged : inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 1
}

//====================QuickFix
//Doubles Healing rate
//No Overheal


Actor QuickFixPChargeItem : CustomInventory
{
Tag "Quick Fix: Doubles healing but no overheal"
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "Quick Fix: Doubles healing but no overheal"
inventory.icon "PILICON5"
Inventory.PickupSound "item/1up"
scale 2.0
-COUNTITEM
+INVBAR
States
{
Spawn:
OCBP B 5
loop
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("PillCharged",1,"PFail")
TNT1 A 0 A_GiveInventory("QuickFixCharge",60)
TNT1 A 0 A_GiveInventory("PillCharged",1)
TNT1 A 0 A_RearrangePointers(AAPTR_NULL, AAPTR_NULL, AAPTR_NULL)
stop
PFail:
TNT1 A 0
TNT1 A 0
fail
}
}

ACTOR QuickFixCharge : inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 60
}

actor HealBeam_QF : HealBeam
{
+DONTTRANSLATE
translation "192:192=4:4", "198:198=94:94"
States
{
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("HealBeamQF_FX",0,0,0,0)
Goto AfterSpot
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("QuickFixHeal",1)
TNT1 A 0 A_GiveInventory("PillChargeDrain",1,AAPTR_MASTER)
TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
Stop
}
}

actor HealBeamQF_FX
{
translation "192:192=4:4", "198:198=94:94"
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("HealBeamQF_FX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}

actor QuickFixHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Jumpifinventory("HealDelay",1,"Nope")
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)
TNT1 A 0 HealThing(15)
TNT1 A 1 //A_Giveinventory("IveBeenHealed")
TNT1 A 0 A_PlaySoundEx("item/energyup","Weapon")
stop

Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor RecovLightBig
{
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 4.0
States
{
Spawn:
RCO2 ABCDEFG 4
stop
}
}

//====================UppenAtem
//half healing rate
//Half Overheal rate
//30% boost in all stats [lasting]


Actor UppenAtemPChargeItem : CustomInventory
{
Tag "UppenAtem: half healing & overheal speed, 30% boost to all stats [lasting]"
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "UppenAtem: half healing & overheal speed, 30% boost to all stats [lasting]"
inventory.icon "PILICON9"
Inventory.PickupSound "item/1up"
scale 2.0
-COUNTITEM
+INVBAR
States
{
Spawn:
OCBP B 5
loop
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("PillCharged",1,"PFail")
TNT1 A 0 A_GiveInventory("UppenAtemCharge",60)
TNT1 A 0 A_GiveInventory("PillCharged",1)
TNT1 A 0 A_RearrangePointers(AAPTR_NULL, AAPTR_NULL, AAPTR_NULL)
stop
PFail:
TNT1 A 0
TNT1 A 0
fail
}
}

ACTOR UppenAtemCharge : inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 60
}

actor HealBeam_UP : HealBeam
{
+DONTTRANSLATE
translation "192:192=77:77", "198:198=78:78"
States
{
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("HealBeamUP_FX",0,0,0,0)
Goto AfterSpot
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("UppenAtemHeal",1)
TNT1 A 0 A_GiveInventory("PillChargeDrain",1,AAPTR_MASTER)
TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
Stop
}
}

actor HealBeamUP_FX
{
translation "192:192=77:77", "198:198=78:78"
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("HealBeamUP_FX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}

actor UppenAtemHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Giveinventory("LightHealBeamHeal") 
//Statboosters
TNT1 A 1 A_Giveinventory("UppenAtemAttackBoost",1)
TNT1 A 0 A_Giveinventory("UppenAtemSpeedBoost",1)
TNT1 A 0 A_Giveinventory("UppenAtemDefBoost",1)
TNT1 A 0 A_Jumpifinventory("UppenAtemFlag",1,2)
TNT1 A 0 A_Spawnitemex("UppenAtemWatcher")
TNT1 A 0 A_JumpIf(CallACS("HealthPercent",0)>=100,"Overheal") //at 100% health? overheal!!
TNT1 A 0
stop
Overheal:
TNT1 A 0 A_JumpIf(CallACS("HealthPercent",0)>=150,"Nope") //over 150% health? no more overheal
TNT1 A 0 A_Jumpifinventory("IsHealer",1,2)
TNT1 A 0 A_Giveinventory("LightHealBeamOverHeal") 
TNT1 A 0
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

//===
ACTOR UppenAtemFlag : Inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 2
}

Actor UppenAtemWatcher 
//Spawns effects over the actor
{
+MISSILE
+NOTARGETSWITCH
+NONETID
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%0 succumed to poison"
Var Int User_TargTID;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveToTarget("UppenAtemFlag",1)
Spawn2:
TNT1 A 1 A_GiveToTarget("UppenAtemFX",1)
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("UppenAtemAttackBoost",1,"Spawn2")
TNT1 A 0 A_JumpIfInTargetInventory("UppenAtemSpeedBoost",1,"Spawn2")
TNT1 A 0 A_JumpIfInTargetInventory("UppenAtemDefBoost",1,"Spawn2")
TNT1 A 0 A_JumpIfInTargetInventory("OverhealValue",1,"Refresh")
TNT1 A 0 A_TakeFromTarget("UppenAtemFlag",9)
stop

Refresh:
TNT1 A 0 A_GiveToTarget("UppenAtemAttackBoost",1)
TNT1 A 0 A_GiveToTarget("UppenAtemSpeedBoost",1)
TNT1 A 0 A_GiveToTarget("UppenAtemDefBoost",1)
Goto Spawn2

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakeFromTarget("UppenAtemFlag",9)
stop
}
}

actor UppenAtemAttackBoost : PowerDamage
{Powerup.Duration 25 damagefactor "Normal", 1.3}

actor UppenAtemSpeedBoost : PowerSpeed
{Powerup.Duration 25 Speed 1.3}

actor UppenAtemDefBoost : PowerProtection
{Powerup.Duration 25 damagefactor "Normal", 0.7}

actor UppenAtemFX : CustomInventory  
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Spawn:
TNT1 A 1
loop
Use:
TNT1 A 1
TNT1 A 0 A_SpawnItemEx("UppenAtemParticle",40,40,random(0,45),0,0,0,random(25,335))
TNT1 A 0 A_SpawnItemEx("UppenAtemMarker",0,0,100)
stop
}
}

actor UppenAtemMarker
{
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
PILL I 0
PILL I 1
stop
}
}
actor UppenAtemParticle
{
translation "192:192=77:77", "198:198=78:78"
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
BEFF G 0
BEFF GHIJJKKLLL 2 A_Fadeout
stop
}
}

//====================Vigorizer
//Minimised healing
//No Overheal
//200% boost to ATK
//50% boost to speed.


Actor VigorizerPChargeItem : CustomInventory
{
Tag "Vigorizer: Minimal healing and no overheal, 2x atk and +50% speed"
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "Vigorizer: Minimal healing and no overheal, 2x atk and +50% speed"
inventory.icon "PILICON2"
Inventory.PickupSound "item/1up"
scale 2.0
-COUNTITEM
+INVBAR
States
{
Spawn:
OCBP B 5
loop
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("PillCharged",1,"PFail")
TNT1 A 0 A_GiveInventory("VigorizerCharge",120)
TNT1 A 0 A_GiveInventory("PillCharged",1)
TNT1 A 0 A_RearrangePointers(AAPTR_NULL, AAPTR_NULL, AAPTR_NULL)
stop
PFail:
TNT1 A 0
TNT1 A 0
fail
}
}

ACTOR VigorizerCharge : inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 120
}

actor HealBeam_VG : HealBeam
{
+DONTTRANSLATE
translation "192:192=229:229", "198:198=41:41"
States
{
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("HealBeamVG_FX",0,0,0,0)
Goto AfterSpot
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("VigorizerHeal",1)
TNT1 A 0 A_GiveInventory("PillChargeDrain",1,AAPTR_MASTER)
TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
Stop
}
}


actor HealBeamVG_FX
{
translation "192:192=229:229", "198:198=41:41"
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("HealBeamVG_FX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}

actor VigorizerHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Giveinventory("LightHealBeamHeal") 
//Statboosters
TNT1 A 1 A_Giveinventory("VigorizerAttackBoost",1)
TNT1 A 0 A_Giveinventory("VigorizerSpeedBoost",1)
TNT1 A 0 A_Jumpifinventory("VigorizerFlag",1,2)
TNT1 A 0 A_Spawnitemex("VigorizerWatcher")
TNT1 A 0 
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

//===
ACTOR VigorizerFlag : Inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 2
}

Actor VigorizerWatcher 
//Spawns effects over the actor
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%0 succumed to poison"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveToTarget("VigorizerFlag",1)
Spawn2:
TNT1 A 1 A_GiveToTarget("VigorizerFX",1)
TNT1 A 0 A_JumpIfInTargetInventory("VigorizerAttackBoost",1,"Spawn2")
TNT1 A 0 A_JumpIfInTargetInventory("VigorizerSpeedBoost",1,"Spawn2")
TNT1 A 0 A_TakeFromTarget("VigorizerFlag",1)
stop
Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakeFromTarget("VigorizerFlag",1)
stop
}
}

actor VigorizerAttackBoost : PowerDamage
{
Powerup.Duration 25
damagefactor "Normal", 2.0
}

actor VigorizerSpeedBoost : PowerSpeed
{
Powerup.Duration 25
Speed 1.5
}


actor VigorizerFX : CustomInventory  
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Spawn:
TNT1 A 1
loop
Use:
TNT1 A 1
TNT1 A 0 A_SpawnItemEx("VigorizerParticle",40,40,random(0,45),0,0,0,random(1,360))
TNT1 A 0 A_SpawnItemEx("VigorizerMarker",0,0,100)
stop
}
}

actor VigorizerMarker
{
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
PILL B 0
PILL B 1
stop
}
}

actor VigorizerParticle
{
translation "192:192=229:229", "198:198=41:41"
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
BEFF G 0
BEFF GHIJJKKLLL 1 A_Fadeout
stop
}
}

//====================Blokkital
//Minimised healing
//No Overheal
//200% boost to Def
//Blast Proof
//Ripper Proof
//No Pain


Actor BlokkitalPChargeItem : CustomInventory
{
Tag "Blokkital: Minimal healing and no overheal, but makes the target super sturdy!"
inventory.amount 1
inventory.maxamount 3
inventory.pickupmessage "Blokkital: Minimal healing and no overheal, but makes the target super sturdy!"
inventory.icon "PILICN14"
Inventory.PickupSound "item/1up"
scale 2.0
-COUNTITEM
+INVBAR
States
{
Spawn:
OCBP B 5
loop
Use:
TNT1 A 0
TNT1 A 0 A_JumpIfInventory("PillCharged",1,"PFail")
TNT1 A 0 A_GiveInventory("BlokkitalCharge",120)
TNT1 A 0 A_GiveInventory("PillCharged",1)
TNT1 A 0 A_RearrangePointers(AAPTR_NULL, AAPTR_NULL, AAPTR_NULL)
stop
PFail:
TNT1 A 0
TNT1 A 0
fail
}
}

ACTOR BlokkitalCharge : inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 120
}

actor HealBeam_BK : HealBeam
{
+DONTTRANSLATE
translation "192:192=199:199", "198:198=75:75"
States
{
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("HealBeamBK_FX",0,0,0,0)
Goto AfterSpot
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("BlokkitalHeal",1)
TNT1 A 0 A_GiveInventory("PillChargeDrain",1,AAPTR_MASTER)
TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
Stop
}
}

actor HealBeamBK_FX
{
translation "192:192=199:199", "198:198=75:75"
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("HealBeamBK_FX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}

actor BlokkitalHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0
TNT1 A 0 A_Jumpifinventory("CannotUseHealth",1,"Nope")
TNT1 A 0 A_Giveinventory("LightHealBeamHeal") 
//Statboosters
TNT1 A 0 A_Giveinventory("BlokkitalDefBoost",1)
TNT1 A 0 A_Jumpifinventory("BlokkitalFlag",1,2)
TNT1 A 0 A_Spawnitemex("BlokkitalWatcher")
TNT1 A 0 
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

//===
ACTOR BlokkitalFlag : Inventory
{
  Inventory.Amount 1
  Inventory.MaxAmount 2
}

Actor BlokkitalWatcher 
//Spawns effects over the actor
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
Obituary "%0 succumed to poison"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveToTarget("BlokkitalFlag",1)
Spawn2:
TNT1 A 1 A_GiveToTarget("BlokkitalFX",1)
TNT1 A 0 A_JumpIfInTargetInventory("BlokkitalDefBoost",1,"Spawn2")
TNT1 A 0 A_TakeFromTarget("BlokkitalFlag",1)
stop
Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakeFromTarget("BlokkitalFlag",1)
stop
}
}

actor BlokkitalDefBoost : Powerprotection
{
+DONTRIP
+DONTSQUASH
+NOPAIN
+NORADIUSDMG
Powerup.Duration 25
damagefactor "Normal", 0.2
damagefactor "AuraType", 1.0
damagefactor "AuraType2", 1.0
damagefactor "AuraType3", 1.0
damagefactor "AuraTypeX", 1.0 
}

actor BlokkitalFX : CustomInventory  
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Spawn:
TNT1 A 1
loop
Use:
TNT1 A 1
TNT1 A 0 A_SpawnItemEx("BlokkitalParticle",40,40,random(0,45),0,0,0,random(1,360))
TNT1 A 0 A_SpawnItemEx("BlokkitalMarker",0,0,100)
stop
}
}

actor BlokkitalMarker
{
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
PILL N 0
PILL N 1
stop
}
}

actor BlokkitalParticle
{
translation "192:192=199:199", "198:198=75:75"
+CLIENTSIDEONLY
+NOGRAVITY
+NOINTERACTION
scale 2.0
States
{
Spawn:
BEFF G 0
BEFF GHIJJKKLLL 1 A_Fadeout
stop
}
}