//[+]========================================================================[+]
//-------------------------------|ICe Wall|-----------------------------------
//[+]========================================================================[+]
// Ice walls are important to the class, they block projectiles, can be pushed to
//flatten opponents, and most importantly, make the surroundings colder so that
//Yeti can aquire chill needed to use his weapons. 
//[+]========================================================================[+]
Actor IceTowerBase
{
scale 3.5 //2.5
Obituary "Was knocked out by an IceTower"
+MISSILE
+RIPPER
+PUSHABLE
+SHOOTABLE
+SOLID
+NODAMAGETHRUST
+NOTARGETSWITCH
+NOEXPLODEFLOOR //
+DOOMBOUNCE
+NOBLOOD
+MOVEWITHSECTOR
+CANBOUNCEWATER
+DONTSPLASH
+DONTRIP
+BLOCKEDBYSOLIDACTORS
//+REFLECTIVE
//+DONTREFLECT
Mass 9999999
PushFactor 0.45
DamageType "IceWall"
Health 300
Damage (8)
Radius 15
Height 90 
BounceFactor 0.91
Bouncecount 1
WallBounceFactor 0.91
DamageFactor "IceWall", 0.0
painchance 256
Painthreshold 2
RenderStyle "Translucent"
Alpha 0.7
Var Int User_Tally;
DamageFactor "Weavile", 0.4
DamageFactor "WeoWeoIce1", 0.4
DamageFactor "WeoWeoIce2", 0.4
DamageFactor "WeoWeoIceWep", 0.4
DamageFactor "WeoWeoIceWep2", 0.4
DamageFactor "WeoWeoIceItem", 0.4
DamageFactor "BlizzardSword", 0.4
DamageFactor "FlashFreeze", 0.4
DamageFactor "DiamondIcecicle", 0.4
DamageFactor "FrostTowerBuild", 0.4
DamageFactor "FrostTowerB", 0.4
DamageFactor "BozuSnow", 0.4
DamageFactor "BozuWave", 0.4
DamageFactor "BozuFlake", 0.4
DamageFactor "BozuShieldPiece", 0.4
DamageFactor "BozuShieldShot", 0.4
DamageFactor "BozuBreath", 0.4
DamageFactor "BoltPistol", 0.4
DamageFactor "FrostAtomizer", 0.4
DamageFactor "KICE", 0.4
DamageFactor "FrozenCapella", 0.4
DamageFactor "ChillingCaesura", 0.4
DamageFactor "ArcticAdagio", 0.4
DamageFactor "IceBlade", 0.4
DamageFactor "IceBall", 0.4
DamageFactor "IceShard", 0.4
DamageFactor "Ice2", 0.4
DamageFactor "FCrack2", 0.4
DamageFactor "IcePulse", 0.4
DamageFactor "RefrainFlurry", 0.4
DamageFactor "NegativeBreath", 0.4
DamageFactor "FreonIceShot", 0.4
DamageFactor "FreonIceTrap", 0.4
DamageFactor "GizmoIce", 0.4


DamageFactor "WilterFreezeRay", 0.5
DamageFactor "IceType", 0.4  
DamageFactor "IceTypex", 0.4
DamageFactor "IceShard", 0.4
DamageFactor "IceSlasher", 0.4
DamageFactor "BlizzardAttack", 0.4
DamageFactor "FreezeCracker", 0.4
DamageFactor "FreezeCrackerBit", 0.4
DamageFactor "IceWave", 0.4
DamageFactor "IceWall", 0.4
DamageFactor "ChillEffect", 0.4
DamageFactor "EIceType", 0.4
DamageFactor "EIceType2", 0.4
States
{
Spawn:
ICTW A 0
ICTW A 0
Stop

//[+]==========================================[+]
//===Healed by ice type attacks===
Pain.Weavile:
Pain.WeoWeoIce1:
Pain.WeoWeoIce2:
Pain.WeoWeoIceWep:
Pain.WeoWeoIceWep2:
Pain.WeoWeoIceItem:
Pain.BlizzardSword:
Pain.FlashFreeze:
Pain.DiamondIcecicle:
Pain.FrostTowerBuild:
Pain.FrostTowerB:
Pain.BozuSnow:
Pain.BozuWave:
Pain.BozuFlake:
Pain.BozuShieldPiece:
Pain.BozuShieldShot:
Pain.BozuBreath:
Pain.BoltPistol:
Pain.FrostAtomizer:
Pain.KICE:
Pain.FrozenCapella:
Pain.ChillingCaesura:
Pain.ArcticAdagio:
Pain.IceBlade:
Pain.IceBall:
Pain.IceShard:
Pain.Ice2:
Pain.FCrack2:
Pain.IcePulse:
Pain.RefrainFlurry:
Pain.NegativeBreath:
Pain.FreonIceShot:
Pain.FreonIceTrap:
Pain.GizmoIce:

Pain.WilterFreezeRay:
Pain.IceType:   
Pain.IceTypex:
Pain.IceShard:
Pain.IceSlasher:
Pain.BlizzardAttack:
Pain.FreezeCracker:
Pain.FreezeCrackerBit:
Pain.IceWave:
Pain.IceWall:
Pain.ChillEffect:
Pain.EIceType:
Pain.EIceType2:

ICTW A 0 A_ScaleVelocity(0.7)
ICTW A 0 A_SpawnitemEx("IceSparkle",random(-60,60),random(-60,60),random(-60,60)+64)
ICTW A 0 Healthing(20)
ICTW A 0 A_JumpIf(momx>1||momy>1||momx<-1||momy<-1,"Moving")
ICTW A 0 A_ChangeFlag("PUSHABLE",1)
ICTW A 0 A_jump(256,"Spawn.Stationary")
Goto Spawn.Stationary
//[+]==========================================[+]

}
}


//======================
actor IceWallBumper : FastProjectile
{
PROJECTILE
+NOTARGETSWITCH
+BLOODSPLATTER
+DONTBLAST
+NODAMAGETHRUST
+NOBLOOD
+DONTREFLECT
//+Ripper
radius 8
height 8
Speed 45
Damage (10)
damagetype "IceTower"
RenderStyle "ADD"
Alpha 0.6
scale 1.5
Reactiontime 14
States
{
Spawn:
TNT1 A 0 
TNT1 AAA 1 
stop
}
}

actor IceTowerSeed //: FastProjectile
{
//PROJECTILE
+MISSILE
+NOTARGETSWITCH
+BLOODSPLATTER
+DONTBLAST
+SLIDESONWALLS
+BOUNCEONCEILINGS
+NODAMAGETHRUST
+NOBLOOD
+DONTREFLECT
+RIPPER
-NOGRAVITY
//WallBounceFactor 0.5
Gravity 1
damagetype "IceTower"
Damage (1)
radius 16
height 16
Speed 45
scale 3
States
{
Spawn:
FCRA D 0 
FCRA D 1 
loop
Death:
FCRA D 0 A_Checkfloor("XDeath")
FCRA D 1 Thrustthingz(0,30,1,0)
loop
XDeath:
ICTW A 0 A_jumpifintargetinventory("IceBlockLimit",6,"Explode")
FCRA D 1 A_PlaySoundEx("weapon/icewallspawn","Weapon")
FCRA D 1 A_SpawnItemEx("IceTowerSpawner",-32,0,0)
FCRA D 0 
stop
Explode:
ASEX A 0 A_Explode(8, 64, 0)
ASEX A 0 A_PlaySoundEx("weapon/centaurflash","Weapon")
ASEX BCDEF 1
Stop
}
}

actor IceTowerSpawner
{
scale 3.5
+MISSILE
+RIPPER
+NOGRAVITY
+DONTBLAST
+NOBLOOD
+NOCLIP
Mass 5//9999999
DamageType "IceTower"
Damage (0)
Height 64
Radius 24
States
{
Spawn:
ICWL A 0 
ICWL A 0 
ICWL ABCDE 2
ICWL E 0 A_ChangeFlag("NOCLIP", 0) //--
ICTW A 0 A_ChangeFlag("NOGRAVITY",0)
ICTW A 0 //A_Explode(8, 64, 0)
ICTW A 1 A_CheckFloor("Death")
Goto Spawn+8
Death:
ICTW A 0 A_ChangeFlag("NOINTERACTION", 1)
TNT1 A 0 A_GiveToTarget("IceBlockLimit",1)
ICTW A 0 A_jumpifintargetinventory("SuperIceWall",1,"Super")
ICTW A 0 A_SpawnItemEx("IceTower")
stop
Super:
ICTW A 0
ICTW A 0 A_SpawnItemEx("SuperIceTower")
stop
}
}

actor IceTower : IceTowerBase
{
States
{
Spawn:
ICTW A 0
TNT1 A 0 ACS_NamedExecuteAlways("OBJECTTALLY",0) 
Spawn.Stationary:
ICTW A 0 A_JumpIfHealthLower(200, "Spawn.low")
ICTW A 1 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW A 1 A_JumpIfInTargetInventory("IceWallFlag",1,"Death")
//ICTW A 1 A_JumpIfInTargetInventory("IceWallSpawnPush",1,"Slam")
ICTW A 0 A_JumpIf(momx>1||momy>1||momx<-1||momy<-1,"MoveBegin")
ICTW A 0 Thing_Damage(0, 1)
ICTW A 0 //A_Explode(8, 64, 0)
ICTW A 0 A_jumpifcloser(250,2)
ICTW A 0 A_CheckFloor("Spawn.Stationary") //====
ICTW A 0 A_GiveToTarget("ChillPower",4)
ICTW A 0 A_CheckFloor("Spawn.Stationary")
Spawn.low:
ICTW B 1 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW B 1 A_JumpIfInTargetInventory("IceWallFlag",1,"Death")
ICTW B 0 A_JumpIf(momx>1||momy>1||momx<-1||momy<-1,"MoveBegin")
ICTW B 0 Thing_Damage(0, 1)
ICTW B 0 //A_Explode(8, 64, 0)
ICTW B 0 A_CheckFloor("Spawn.low")
Goto MoveBegin
MoveBegin: 
ICTW A 1 ACS_ExecuteAlways(994, 0, 1)
ICTW A 0 A_ChangeFlag("PUSHABLE",0)
ICTW A 0 A_JumpIf(momx>5||momy>5||momx<-51||momy<-5,"Moving")
ICTW A 0 A_JumpIf(Args[0] > 0,"Accelerate")
ICTW A 0 A_SetArg(0,1)
ICTW A 0 ACS_NamedExecuteAlways("Core_StickyLifts",0,28,64, 2)
ICTW A 0 
Accelerate:
ICTW A 0 A_Recoil(-3)
ICTW AAAAA 1 A_JumpIf(z-floorz > 0, "Air")
ICTW A 0 A_Recoil(-3)
ICTW AAAAA 1 A_JumpIf(z-floorz > 0, "Air")
ICTW A 0 A_Recoil(-3)
ICTW AAAAA 1 A_JumpIf(z-floorz > 0, "Air")
ICTW A 0 A_Recoil(-2)
ICTW AAAAA 1 A_JumpIf(z-floorz > 0, "Air")
ICTW A 0 A_Recoil(-2)
ICTW AAAAA 1 A_JumpIf(z-floorz > 0, "Air")
Goto Moving
Moving:
ICTW A 0 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW A 0 A_JumpIfInTargetInventory("IceWallFlag",1,"Death")
ICTW A 1 Thing_Damage(0, 1)
ICTW A 0 A_JumpIfHealthLower(200, "MovingLow")
ICTW A 0 A_CheckFloor("Moving")
Goto Air
MovingLow:
ICTW A 0 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW B 0 A_JumpIfInTargetInventory("IceWallFlag",1,"Death")
ICTW B 1 Thing_Damage(0, 1)
ICTW B 0 A_CheckFloor("MovingLow")
Goto AirLow
Air:
ICTW A 0 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW A 0 A_GiveInventory("IceWallFlag", 1)
ICTW A 0 ACS_ExecuteAlways(994, 0)
ICTW A 1 A_CheckFloor("Continue")
Goto Air+2
AirLow:
ICTW A 0 A_Jumpif(User_Tally > 3 ,"TallyDeath")
ICTW B 0 A_GiveInventory("IceWallFlag", 1)
ICTW B 0 ACS_ExecuteAlways(994, 0)
ICTW B 1 A_CheckFloor("Continue")
Goto AirLow+2
Continue:
ICTW A 1 A_TakeInventory("IceWallFlag", 1)
ICTW A 0 A_Recoil(-1)
Goto Moving
Pain:
ICTW A 0 A_PlaySound("item/protoreflect")
ICTW A 0 A_Giveinventory("IB_Invulnerableframes")
ICTW A 0 A_JumpIf(momx>1||momy>1||momx<-1||momy<-1,"Moving")
Goto Spawn.Stationary


pain.Freezewave_Ice:
ICTW A 0 //A_jumpifintargetinventory("IceResonance",1,9)
ICTW A 0 Healthing(7)
ICTW A 0 A_jumpifintargetinventory("IB_FreezeWaveBuffer",1,4)
ICTW A 0 A_SpawnitemEx("IB_FreezeWaveFx", 0, 0, 0, momx, momy, momz, 0, SXF_ABSOLUTEMOMENTUM, 0)
ICTW A 0 A_GiveInventory("IB_FreezeWaveBuffer")
ICTW A 0 A_SpawnitemEx("FreezeWaveDamager")
ICTW A 0
ICTW A 0 A_JumpIf(momx>1||momy>1||momx<-1||momy<-1,"Moving")
ICTW A 0 A_jump(256,"Spawn.Stationary")
Goto Spawn.Stationary
Pain.IceTower:
ICTW A 0 A_jumpifcloser(140,2)
ICTW A 0 A_CheckFloor("Spawn.Stationary")
ICTW A 0 A_Recoil(-40)
Goto Moving 

Death.Freezewave_Ice:
Death:
TNT1 A 0 ACS_NamedExecuteAlways("OBJECTDEATHTALLY",0) 
TallyDeath:
ICTW B 0 A_Stop
ICTW B 0 A_ChangeFlag("SHOOTABLE", 0)
ICTW B 0 A_ChangeFlag("NOGRAVITY", 1)
ICTW B 0 A_ChangeFlag("SOLID", 0)
//ICTW A 0 A_Explode(125, 125, 0)
ICTW A 0 A_TakeFromTarget("IceBlockLimit",1)
ICTW A 0 A_PlaySoundEx("weapon/centaurflash","Weapon")
//---Random Drops
ICTW B 1 A_SpawnItemEx("IceChunks_A",0,0,0,Random(3,10),0,10,random(1,360))
ICTW B 0 A_SpawnItemEx("IceChunks_A",0,0,0,Random(3,10),0,10,random(1,360))
ICTW B 0 A_Jump(100,2)
ICTW B 0 A_SpawnItemEx("IceChunks_B",0,0,0,Random(3,10),0,10,random(1,360))
ICTW B 0 A_Jump(100,2)
ICTW B 0 A_SpawnItemEx("IceChunks_B",0,0,0,Random(3,10),0,10,random(1,360))
ICTW B 0 A_Jump(100,2)
ICTW B 0 A_SpawnItemEx("IceChunks_C",0,0,0,Random(3,10),0,10,random(1,360))
ICTW B 0 A_Jump(100,2)
ICTW B 0 A_SpawnItemEx("IceChunks_C",0,0,0,Random(3,10),0,10,random(1,360))
//----
ICTW B 3 
ICWL LM 5
stop
}
}

actor SuperIceTower : IceTower
{
scale 4.5
Health 500
RenderStyle "Translucent"
Alpha 0.8
Damage (8)
Radius 21
Height 90
}

actor IB_FreezeWaveFx
{
+NOINTERACTION
+NOGRAVITY
+NOTARGETSWITCH
Scale 2.5
damage (0)
damagetype "Freezewave_Ice"
RenderStyle "Add"
Alpha 1.0
States
{
Spawn:
TNT1 A 0
FROB ABCD 1
Stop
Death: 
Stop
}
}


actor FreezeWaveDamager
{
+NOINTERACTION
+NOGRAVITY
+NOTARGETSWITCH
Scale 2.5
damage (0)
damagetype "Freezewave_Ice"
RenderStyle "Add"
Alpha 1.0
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_Explode(5, 100, 0)
Stop
}
}

Actor FreezewaveFrame : Inventory
{
Inventory.Amount 1
Inventory.MaxAmount 8
}

actor IB_FreezeWaveBuffer : PowerProtection
{
Powerup.Duration 4
}


actor IB_Invulnerableframes : PowerProtection
{
Powerup.Duration 2
damagefactor "Normal", 0.1
damagefactor "AuraType", 0.45
}

Actor IceChunks_A : CustomInventory
{
Inventory.Amount 1
Inventory.MaxAmount 1
inventory.pickupmessage "Grabbed some Ice"
inventory.pickupsound "weapon/weaponup"
+AUTOACTIVATE
Gravity 1.3
States
//Reactiontime 250
{
Spawn:
TNT1 A 0
ICEP A 1 A_CheckFloor("Spawn2")
Loop
Spawn2:
"----" A 1 A_Stop
Goto Spawn3
Spawn3:
"----" A 35
"----" A 35 
"----" A 35
"----" A 35
"----" A 35
Stop
PickUp:
"----" A 0 A_JumpIfInventory("IceMaster",1,"Success")
Fail
Success:
"----" A 0 A_JumpIfInventory("IceBombChill",370,"FullIB") //icebomb is full, all goes to blizzard maker
"----" A 0 A_JumpIfInventory("BlizzardMakerChill",200,"FullBM") //Blizzard maker is full,
"----" A 0 A_GiveInventory("IceBombChill",5) //neither are full, so ammount is split between them
"----" A 0 A_GiveInventory("BlizzardMakerChill",5)
stop
FullIB:
"----" A 0 A_JumpIfInventory("BlizzardMakerChill",200,"ChillGive") //Icebomb AND Blizzard maker full? just give chill
"----" A 0 A_GiveInventory("BlizzardMakerChill",10) //not full yet, all chill goes to Blizzard maker now
Stop
FullBM:
"----" A 0 A_GiveInventory("IceBombChill",10) //no point in checking if IceBomb is full, we already checked before this
Stop
ChillGive:
"----" A 0 A_GiveInventory("ChillPower",10)
}
}

actor IceChunks_B : IceChunks_A
{
States
{
Spawn:
ICEP B 1 A_CheckFloor("Spawn3")
Loop
}
}

actor IceChunks_C : IceChunks_A
{
States
{
Spawn:
ICEP C 1 A_CheckFloor("Spawn3")
Loop
}
}

Actor IceBlockLimit : Inventory
{
inventory.amount 1
inventory.maxamount 100
}

Actor IceBlockLimitCheck: Powerup
{
  Powerup.Duration 2
}
